pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
#include util.p8

function _init()
	lvl_01={x=0,y=0,w=8,h=8}
	
	player={x=0,y=0,r=0}
	
	local lvl=lvl_01
	for y=lvl.y,lvl.y+lvl.h-1 do
		for x=lvl.x,lvl.x+lvl.w-1 do
			if mget(x,y)==1 then
				player.x=x+0.5
				player.y=y+0.5
			end
		end
	end
end

function _update()
	if (btn(0)) player.r+=0.01
	if (btn(1)) player.r-=0.01
	
	local iy=0
	if (btn(2)) iy+=1
	if (btn(3)) iy-=1
	
	local spd=0.1
	player.x+=cos(player.r)*iy*spd
	player.y+=sin(player.r)*iy*spd
	
	if btn(2) then
		
	end
end

function _draw()
	cls(5)
	rectfill(0,0,127,63,13)
		watch(player.x..","..player.y)
		
	for sx=0,127 do
		local rr=player.r-((sx/127)-0.5)*0.2
		
		local dx,dy=cos(rr),sin(rr)
		
		local dist=0
		
		if rr==0 or rr==0.5 then
			-- perfectly horizontal
			local x0,y0=0,flr(player.y)
			if rr==0 then
			 x0=ceil(player.x)
			else
				x0=flr(player.x)-0.001
			end
			while true do
				if fget(mget(x0,flr(y0)),0) or 
					x0<0 or x0>127 
				then
					break
				end
				x0+=sgn(dx)
				watch(x0..","..y0)
			end
			dist=x0-player.x
		elseif rr==0.25 or rr==0.75 then
			-- perfectly vertical
		else
			local x0,y0=0,0
			if dx>0 then
				x0=ceil(player.x)
			else
				x0=flr(player.x)-0.0001
			end
			if dy>0 then
				y0=ceil(player.y)
			else
				y0=flr(player.y)-0.0001
			end
			local xstep=tan(rr)
			local ystep=tan(0.25-rr)
			
			local a0={
				x=x0,
				y=player.y-abs(x0-player.x)*xstep
			}
			local b0={
				x=player.x+abs(y0-player.y)*ystep,
				y=y0
			}
			
			local a=a0
			local b=b0

			local ad,bd=32767,32767
			
			local test=function(p)
				return fget(mget(p.x,p.y),0) or
					p.x<0 or p.y<0 or p.x>127 or p.y>64
			end
			
			local iter=0
			while iter<100 do
				if test(a) then
					local adx=abs(a.x-player.x)+
						iter
					local ady=abs(a.y-player.x)+
						iter*ystep
					ad=sqrt(adx*adx+ady*ady)
					break
				end
				a.x+=1
				a.x+=ystep
				iter+=1
			end
			
			local iter=0
			while iter<100 do
				if test(b) then
					local bdx=abs(b.y-player.y)+
						iter*xstep
					local bdy=abs(b.y-player.y)+
						iter
					bd=sqrt(bdx*bdx+bdy*bdy)
					break
				end
				a.y+=1
				a.y+=ystep
				iter+=1
			end
			
			dist=min(ad,bd)
		end
		
		if dist>0 then
			--print(dist,0,6,7)
			local height=128/dist
			for sy=max(64-height/2,0),min(64+height/2,127) do
				pset(sx,sy,12)
			end
		end
		
--[[		local xstep=tan(rr)
		local ystep=tan(0.25-rr)]]
		
	end
	
		
	line(64,64,64+cos(player.r)*16,64+sin(player.r)*16,11)
	
	--print(xstep..","..ystep,0,0,7)
	
--	print(player.x..","..player.y,0,0,7)
	

	
	draw_watches()
	draw_log()
end

function tan(theta)
	return sin(theta)/cos(theta)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000bbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000bbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000bbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000bbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
