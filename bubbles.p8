pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
function moveto(a,b,r)
	if a<b then
		return min(a+r,b)
	elseif a>b then
		return max(a-r,b)
	else
		return a
	end
end

function _init()
	init()
end

function init()
	_update=update
	_draw=draw
	plr={
		x=64,y=64,
		dx=0,dy=0,
		face=1,
		size=1,
	}
	blocks={}
	bubbles={}
	g={
		tblock=30,
	}
	for i=0,10 do
		local n=i/11
		local x,y=cos(n),sin(n)
		x=64+x*48
		y=64+y*48
		add(bubbles,{
			x=x,y=y,r=3,dx=0,dy=0})
	end
end

function update()
	if g.tblock>0 then
		g.tblock-=1
		if g.tblock<=0 then
			g.tblock+=30+rnd(30)
			local side=flr(rnd(4))
			local size=flr(rnd(4))+4
			local col=rnd(7)+8
			local off0=-size
			local off1=rnd(128-size*2)+size
			local dx,dy=1,0
			if side%2==1 then
				off0+=128+size*2
				dx,dy=-dx,-dy
			end
			local bx,by=off0,off1
			if side>=2 then
				bx,by=by,bx
				dx,dy=dy,dx
			end
			add(blocks,{
				sx=bx,sy=by,
				x=bx,y=by,
				dx=dx,dy=dy,
				travel=128+size*2,
				size=size,col=col,
				side=side,
				speed=1+rnd(3),
				twait=30})
		end
	end
	
	foreach(bubbles,function(b)
		local dx=b.x-plr.x
		local dy=b.y-plr.y
		local d=sqrt(dx*dx+dy*dy)
		if d<=b.r+plr.size then
			del(bubbles,b)
			plr.size+=b.r/10
		end
		local f=1-min(d/20,1)
		local pull=-((f*f)/20)
		b.dx+=dx*pull
		b.dy+=dy*pull
		b.x+=b.dx
		b.y+=b.dy
		local s0=128+b.r*2
		local s1=128+b.r
		if (b.x<-b.r) b.x+=s0
		if (b.x>s1) b.x-=s0
		if (b.y<-b.r) b.y+=s0
		if (b.y>s1) b.y-=s0
	end)
	
	foreach(blocks,function(b)
		if b.twait>0 then
			b.twait-=1
			return
		end
		b.x+=b.dx*b.speed
		b.y+=b.dy*b.speed
		if abs(b.x-b.sx)>=b.travel
			or abs(b.y-b.sy)>=b.travel
		then
			del(blocks,b)
		end
	end)


	local ix,iy=0,0
	if (btn(0,0)) ix-=1
	if (btn(1,0)) ix+=1
	if (btn(2,0)) iy-=1
	if (btn(3,0)) iy+=1
	
	plr.dx+=ix*0.25
	plr.dx=mid(plr.dx,-2,2)
	if (ix==0) plr.dx=moveto(plr.dx,0,0.25)
		
	plr.dy+=iy*0.25
	plr.dy=mid(plr.dy,-2,2)
	if (iy==0) plr.dy=moveto(plr.dy,0,0.25)
	
	if (ix~=0) plr.face=sgn(ix)
	
	plr.x+=plr.dx
	plr.y+=plr.dy
end

function draw()
	cls()
--	spr(32,plr.x,plr.y,1,1,plr.face<0)
	circfill(plr.x,plr.y,plr.size,7)
	
	foreach(bubbles,function(b)
		circ(b.x,b.y,b.r,6)
	end)
		
	local draw_wait=function(b)
		if (b.twait%10<5) return
		if b.side==0 then
			line(0,b.y-b.size,0,b.y+b.size-1,b.col)
		elseif b.side==1 then
			line(127,b.y-b.size,127,b.y+b.size-1,b.col)
		elseif b.side==2 then
			line(b.x-b.size,0,b.x+b.size-1,0,b.col)
		elseif b.side==3 then
			line(b.x-b.size,127,b.x+b.size-1,127,b.col)
		end
	end
	foreach(blocks,function(b)
		if b.twait>0 then
			draw_wait(b)
		end
		rectfill(b.x-b.size,b.y-b.size,
			b.x+b.size-1,b.y+b.size-1,b.col)
	end)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
666cccc6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
56666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
