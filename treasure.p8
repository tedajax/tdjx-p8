pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
#include util.p8

k_pit=48

entity=class({
	x=0,y=0,w=4,h=4,
})

player=class({
	extends=entity,
	cx=0,cy=2,cw=3,ch=2,
	w=3,
	id=0,
})

mapentity=class({
	extends=entity,
	mx=0,my=0,mv=0,
})

toggleentity=class({
	extends=mapentity,
	down_ct=0,
	chain=nil,
	create=function(self)
		self.set={}
	end,
	on_on=function(self) end,
	on_off=function(self) end,
	push=function(self,sender)
		if not self.set[sender] then
			self.set[sender]=sender
			if self.down_ct==0 then
				self:on_on()
			end
			self.down_ct+=1
		end
		if (self.chain) self.chain:push(sender)
	end,
	pop=function(self,sender)
		if self.set[sender] then
			self.set[sender]=nil
			self.down_ct-=1
			if self.down_ct==0 then
				self:on_off()
			end
		end
		if (self.chain) self.chain:pop(sender)
	end
})

door=class({
	extends=toggleentity,
	on_on=function(self)
		mset(self.mx,self.my,0)
	end,
	on_off=function(self)
		mset(self.mx,self.my,self.mv)
	end,
})

bridge=class({
	extends=toggleentity,
	on_on=function(self)
		mset(self.mx,self.my,self.mv)
	end,
	on_off=function(self)
		mset(self.mx,self.my,k_pit)
	end,
})

switch=class({
	extends=toggleentity,
	name="switch",
	w=2,h=2,
	target=nil,
	on_enter=function(self,sender)
		self:push(sender)
	end,
	on_exit=function(self,sender)
		self:pop(sender)
	end,
	on_on=function(self)
		mset(self.mx,self.my,self.mv+1)
		if self.target then
			self.target:push(self)
		end
	end,
	on_off=function(self)
		mset(self.mx,self.my,self.mv)
		if self.target then
			self.target:pop(self)
		end
	end
})

function player:on_update(dt)
	local ix,iy=input_xy(self.id)
	
	local speed=30*dt
	self.dx=ix*speed
	self.dy=iy*speed
	
	move_actor(self,self.dx,self.dy)
	
	local cr={
		x=self.x+self.cx,
		y=self.y+self.cy,
		w=self.cw,h=self.ch
	}
	
	if nofloor_area(cr.x,cr.y,cr.w,cr.h) then
		reset()
	end
	
	for e in all(entities) do
		if e~=self then
			if rect_overlap(cr,e) then
				if not self.touch[e] then
					self.touch[e]=e
					if (e.on_enter) e:on_enter(self)
				end
			else
				if self.touch[e] then
					self.touch[e]=nil
					if (e.on_exit) e:on_exit(self)
				end
			end
		end
	end
end

k_pcols={4,11}
function player:on_draw()
	local x,y=topleft(self)
	pal(7,k_pcols[self.id+1])
	spr(1,x,y)
	pal(7,7)
end

function reset()
	reload(0x2000,0x2000,0x1000)
	_init()
end

function add_entity(e)
	local ret=add(entities,e)
	if e.on_draw then
		add(drawables,e)
	end
	return ret
end

function del_entity(e)
	del(entities,e)
	if e.on_draw then
		del(drawables,e)
	end
end

g_pid=0
function add_player(x,y,m)
	local p=add_entity(player:new({
		id=g_pid,
		x=x*8+4,
		y=y*8+4,
		touch={},
	}))
	players[g_pid]=p
	g_pid+=1
	mset(x,y,0)
	return p
end

function add_door(x,y,m)
	return add_entity(door:new({
		mx=x,my=y,mv=17,
		x=x*8+4,y=y*8+4,
		w=4,h=4,
		set={},
	}))
end

function add_switch(x,y,m)
	return add_entity(switch:new({
		mx=x,my=y,mv=32,
		x=x*8+4,y=y*8+4,
		set={},
	}))
end

function add_bridge(x,y,m)
	local b=add_entity(bridge:new({
		mx=x,my=y,mv=49,
		x=x*8+4,y=y*8+4,
		set={},
	}))
	b:on_off()
	return b
end

_emap={}
_emap[1]=add_player
_emap[17]=add_door
_emap[32]=add_switch
_emap[49]=add_bridge

function _init()

	poke(0x5f2d,1)
	poke(0x5f2e,1)

	entities={}
	drawables={}
	players={}
	
	for x=0,15 do
		for y=0,15 do
			local m=mget(x,y)
			local add_fn=_emap[m]
			if add_fn then
				add_fn(x,y,m)
			end
		end
	end
	
	local d1=find_entity(7,12)
	local d2=find_entity(7,11)
	d1.chain=d2
	
	local s1=find_entity(5,11)
	local s2=find_entity(9,13)
	s1.target=d1
	s2.target=d1
	
	local b1=find_entity(11,10)
	b1.chain=find_entity(11,9)
	
	find_entity(12,11).target=b1
	find_entity(10,8).target=b1
end

debug_colliders=false
function keypress(key)
	if key=="k" then
		debug_colliders=not debug_colliders
	end
end

function _update()
	dt=fps30_dt
	
	while stat(30) do
		keypress(stat(31))
	end

	local n=#entities
	
	for i=1,n do
		local e=entities[i]
		if e.on_update then
			e:on_update(dt)
		end
	end

	local n=#drawables

	for j=1,3 do
		for i=1,n-1 do
			if drawables[i].y>drawables[i+1].y
			then
				local t=drawables[i]
				drawables[i]=drawables[i+1]
				drawables[i+1]=t
			end
		end
	end
end

function _draw()
	pal(3,128,1)
	pal(4,128+9,1)
	pal(11,128+12,1)
	cls(3)
	
	map(0,0,0,0,16,16)
	
	palt(0,false)
	map(0,0,0,0,16,16,2)
	palt()
	
	foreach(drawables,function(e)
		if (e.on_draw) e.on_draw(e)
		if debug_colliders then
			--rect_draw(e,10)
			local r={x=e.x+(e.cx or 0),
				y=e.y+(e.cy or 0),
				w=e.cw or e.w,h=e.ch or e.h}
			rect_draw(r,10)
		end
	end)
	
	draw_log()
	draw_watches()
end

function find_entity(x,y)
	for e in all(entities) do
		if e.mx==x and e.my==y then
			return e
		end
	end
	return nil
end
-->8
function move_actor(self,dx,dy)
	-- do physics	
	
	local x=function() return self.x+self.cx end
	local y=function() return self.y+self.cy end
	local w=self.cw
	local h=self.ch
	
	--[[
	if solid_area(self.x+dx,
		self.y+dy,
		w,h)
	then
		dx,dy=0,0
	end
	
	self.x+=dx
	self.y+=dy]]

	-- x movement
	local dirx=sgn(dx)
	local col_ox=dirx*w
	-- search an extra pixel ahead
	-- when moving left
	if (col_ox<0) col_ox-=1
	
	local nx=x()+dx+col_ox

	local chkx=x()+dx+col_ox				
	if not solid(chkx,y()-h+1) and
		not solid(chkx,y()+h-1)
	then
		-- no contact, move normally
		self.x+=dx
	else
		-- hit solid
		-- find contact point
		while not solid(x()+col_ox,y()-h+1)
			and not solid(x()+col_ox,y()+h-1)
		do
			self.x+=dirx*1
		end
	end

	-- y movement
	local diry=sgn(dy)
	local col_oy=diry*h
	-- search an extra pixel ahead
	-- when moving left
	if (col_oy<0) col_oy-=1
		
	local ny=y()+dy+col_oy

	local chky=y()+self.dy+col_oy
	if not solid(x()-w+1,chky)
		and not solid(x()+w-1,chky)
	then
		-- no contact, move normally
		self.y+=dy
	else
		-- hit solid
		-- find contact point
		while not solid(x()-w+1,y()+col_oy)
			and not solid(x()+w-1,y()+col_oy)
		do
			self.y+=diry*1
		end
	end
end

function solid(x,y)
	return fget(mget(x/8,y/8),0)
end

function nofloor(x,y)
	return fget(mget(x/8,y/8),1)
end

function area_fn(x,y,w,h,fn,t)
	t=t or "any"
	local r={x=x,y=y,w=w,h=h}
	local x1,y1=topleft(r)
	local x2,y2=botright(r)
	local ret={fn(x1,y1),
		fn(x2,y1),
		fn(x1,y2),
		fn(x2,y2)}
	if t=="any" then
		for r in all(ret) do
			if r then
				return true
			end
		end
		return false
	elseif t=="all" then
		for r in all(ret) do
			if not r then
				return false
			end
		end
		return true
	end
end

function solid_area(x,y,w,h)
	return area_fn(x,y,w,h,solid)
end

function nofloor_area(x,y,w,h)
	return area_fn(x,y,w,h,nofloor,"all")
end
__gfx__
00000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000070070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000070070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00cccc00000dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00dccd0000dddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001dd100005dd5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cdccccdc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ccdccdcc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ccdccdcc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cdccccdc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000020000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010303030313030301000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010303030313030301000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000200011000000002000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000010001000011000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010002000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
