pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
#include util.p8

entity=class({
	x=0,y=0,w=4,h=4,
})

player=class({
	extends=entity,
	w=3,
	id=0,
})

mapentity=class({
	extends=entity,
	mx=0,my=0,mv=0,
})

toggleentity=class({
	extends=mapentity,
	down_ct=0,
	chain=nil,
	create=function(self)
		self.set={}
	end,
	on_on=function(self) end,
	on_off=function(self) end,
	push=function(self,sender)
		if not self.set[sender] then
			self.set[sender]=sender
			if self.down_ct==0 then
				self:on_on()
			end
			self.down_ct+=1
		end
		if (self.chain) self.chain:push(sender)
	end,
	pop=function(self,sender)
		if self.set[sender] then
			self.set[sender]=nil
			self.down_ct-=1
			if self.down_ct==0 then
				self:on_off()
			end
		end
		if (self.chain) self.chain:pop(sender)
	end
})

door=class({
	extends=toggleentity,
	on_on=function(self)
		mset(self.mx,self.my,0)
	end,
	on_off=function(self)
		mset(self.mx,self.my,self.mv)
	end,
})

switch=class({
	extends=toggleentity,
	name="switch",
	w=2,h=2,
	target=nil,
	on_enter=function(self,sender)
		self:push(sender)
	end,
	on_exit=function(self,sender)
		self:pop(sender)
	end,
	on_on=function(self)
		mset(self.mx,self.my,self.mv+1)
		if self.target then
			self.target:push(self)
		end
	end,
	on_off=function(self)
		mset(self.mx,self.my,self.mv)
		if self.target then
			self.target:pop(self)
		end
	end
})

function player:on_update(dt)
	local ix,iy=input_xy(self.id)
	
	local speed=30*dt
	self.dx=ix*speed
	self.dy=iy*speed
	
	move_actor(self,self.dx,self.dy)
	
	for e in all(entities) do
		if e~=self then
			if rect_overlap(self,e) then
				if not self.touch[e] then
					self.touch[e]=e
					if (e.on_enter) e:on_enter(self)
				end
			else
				if self.touch[e] then
					self.touch[e]=nil
					if (e.on_exit) e:on_exit(self)
				end
			end
		end
	end
end

k_pcols={12,8}
function player:on_draw()
	local x,y=topleft(self)
	pal(7,k_pcols[self.id+1])
	spr(1,x,y)
	pal()
end

function _init()
	poke(0x5f2d,1)

	entities={}
	players={}
	
	local pid=0
	
	for x=0,15 do
		for y=0,15 do
			local m=mget(x,y)
			if m==1 then
				local p=add(
				entities,player:new({
					id=pid,
					x=x*8+4,
					y=y*8+4,
					touch={},
				}))
				players[pid]=p
				pid+=1
				mset(x,y,0)
			elseif m==17 then
				add(entities,door:new({
					mx=x,my=y,mv=17,
					x=x*8+4,y=y*8+4,
					w=4,h=4,
					set={},
				}))
			elseif m==32 then
				add(entities,switch:new({
					mx=x,my=y,mv=32,
					x=x*8+4,y=y*8+4,
					set={},
				}))
			end
		end
	end
	
	local d1=find_entity(7,12)
	local d2=find_entity(7,11)
	d1.chain=d2
	
	local s1=find_entity(5,11)
	local s2=find_entity(9,13)
	s1.target=d1
	s2.target=d1
end

debug_colliders=false
function keypress(key)
	if key=="k" then
		debug_colliders=not debug_colliders
	end
end

function _update()
	dt=fps30_dt
	
	while stat(30) do
		keypress(stat(31))
	end

	local n=#entities
	
	for i=1,n do
		local e=entities[i]
		if e.on_update then
			e:on_update(dt)
		end
	end

end

function _draw()
	cls()
	
	map(0,0,0,0,16,16)
	
	foreach(entities,function(e)
		if (e.on_draw) e.on_draw(e)
		if debug_colliders then
			rect_draw(e,10)
		end
	end)
	
	draw_log()
	draw_watches()
end

function find_entity(x,y)
	for e in all(entities) do
		if e.mx==x and e.my==y then
			return e
		end
	end
	return nil
end
-->8
function move_actor(self,dx,dy)
	-- do physics		
	
	local w=self.w
	local h=self.h
	
	--[[
	if solid_area(self.x+dx,
		self.y+dy,
		w,h)
	then
		dx,dy=0,0
	end
	
	self.x+=dx
	self.y+=dy]]

	-- x movement
	local dirx=sgn(dx)
	local col_ox=dirx*w
	-- search an extra pixel ahead
	-- when moving left
	if (col_ox<0) col_ox-=1
	
	local nx=self.x+
		dx+col_ox

	local chkx=self.x+self.dx+col_ox				
	if not solid(chkx,self.y-h+1) and
		not solid(chkx,self.y+h-1)
	then
		-- no contact, move normally
		self.x+=dx
	else
		-- hit solid
		-- find contact point
		while not solid(self.x+col_ox,self.y-h+1)
			and not solid(self.x+col_ox,self.y+h-1)
		do
			self.x+=dirx*1
		end
	end

	-- y movement
	local diry=sgn(dy)
	local col_oy=diry*h
	-- search an extra pixel ahead
	-- when moving left
	if (col_oy<0) col_oy-=1
	
	local ny=self.y+
		dy+col_oy

	local chky=self.y+self.dy+col_oy
	if not solid(self.x-w+1,chky)
		and not solid(self.x+w-1,chky)
	then
		-- no contact, move normally
		self.y+=dy
	else
		-- hit solid
		-- find contact point
		while not solid(self.x-w+1,self.y+col_oy)
			and not solid(self.x+w-1,self.y+col_oy)
		do
			self.y+=diry*1
		end
	end
end

function solid(x,y)
	return fget(mget(x/8,y/8),0)
end

function solid_area(x,y,w,h)
	local r={x=x,y=y,w=w,h=h}
	local x1,y1=topleft(r)
	local x2,y2=botright(r)
	return solid(x1,y1) or
		solid(x2,y1) or
		solid(x1,y2) or
		solid(x2,y2)
end
__gfx__
00000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000070070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000070070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9ff99ff9cddddddc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00cccc00000dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00dccd0000dddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001dd100005dd5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000200011000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000010001000011000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010002000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
