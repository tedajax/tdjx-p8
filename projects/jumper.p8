pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
function _init()
	poke(0x5f2d,1)

	world={}
	world.grav=0.4

	ship={}
	ship.x=64
	ship.y=0
	ship.dx=0
	ship.dy=0
	ship.ground=false
	-- jump power percent
	ship.jmppc=0
	ship.jmpgain=1/(30*.5)
	ship.jmpfrc=8
end

g_dbg_showlog=true
function onkey(key)
	if key=="d" then
		g_dbg_showlog=not g_dbg_showlog
	end		
end

function _update()
	watch_clear()
	
	if stat(30) then
		onkey(stat(31))
	end

	ship.dy+=world.grav
		
	local hit,d=cast_down(
		ship.x,ship.y+5,ship.dy)
	
	if hit then
		ship.dy=d
		ship.ground=true
	else
		ship.ground=false
	end
		
	if not ship.ground then
		local acl=0
		if (btn(0)) acl-=1
		if (btn(1)) acl+=1
		acl*=0.1
		ship.dx+=acl
	else
		ship.dx=0
		
		if btn(4) then
			ship.jmppc+=ship.jmpgain
			ship.jmppc=clamp01(ship.jmppc)
		else
			if ship.jmppc>0 then
				ship.dy=-ship.jmpfrc*
					ship.jmppc
				ship.jmppc=0
			end
		end
	end
	
	if ship.dx<0 then
 	local hit,d=cast_left(
 		ship.x-5,ship.y,-ship.dx)
 	if hit then
 		ship.x-=d
 		ship.dx*=-.9
 	end
 end
 
 if ship.dx>0 then
 	local hit,d=cast_right(
 		ship.x+5,ship.y,ship.dx)
 		
 	if hit then
 		ship.x+=d
 		ship.dx*=-.9
 	end
 end

	
	ship.x+=ship.dx
	ship.y+=ship.dy
	
	watch("pos:"..ship.x..","..ship.y)
	watch("vel:"..ship.dx..","..ship.dy)
	
	pf_mem=band(stat(0)/204.8,0xffff)
	pf_cpu=band(stat(1)*100,0xffff)
	memstr="mem:"..pf_mem.."%"
	cpustr="cpu:"..pf_cpu.."%"
	watch(memstr)
	watch(cpustr)
end

function _draw()
	cls()
	line(ship.x,ship.y+5,
		ship.x,ship.y+5+ship.dy,11)
	circfill(ship.x,ship.y,4,7)
	map(0,0,0,0,16,16)
	
	rectfill(0,124,30*ship.jmppc,127,10)
	
	if g_dbg_showlog then
		watch_draw()
		console_draw()
	end
end

function cast_down(ox,oy,d,s)
	s=s or 1
	for i=oy,oy+d,s do
		if point_solid(ox,i) then
			return true,i-oy
		end
	end
	return false
end

function cast_up(ox,oy,d,s)
	s=s or 1
	for i=oy,oy-d,-s do
		if point_solid(ox,i) then
			return true,oy-i
		end
	end
	return false
end

function cast_right(ox,oy,d,s)
	s=s or 1
	for i=ox,ox+d do
		if point_solid(i,oy) then
			return true,i-ox
		end
	end
	return false
end

function cast_left(ox,oy,d,s)
	s=s or 1
	for i=ox,ox-d,-s do
		if point_solid(i,oy) then
			return true,ox-i
		end
	end
	return false
end

function point_solid(x,y)
	return cell_solid(flr(x/8),
		flr(y/8))
end

function cell_solid(cx,cy)
	return fget(mget(cx,cy),0)
end

watches={}
function watch(msg)
	add(watches,tostr(msg))
end

function watch_clear()
	local n=#watches
	for i=1,n do
		watches[i]=nil
	end
end

function watch_draw()
	for y=1,#watches do
		print(watches[y],
			0,(y-1)*6,11)
	end
end

console={}
console.mx=20
function log(msg)
	add(console,tostr(msg))
	if #console>console.mx then
		console[1]=nil
		for i=2,console.mx do
			console[i-1]=console[i]
		end
	end
end

function console_draw()
	for i=1,#console do
		local m=console[i]
		local w=#m*4
		print(m,127-w,(i-1)*6,6)
	end
end

function clamp(v,mn,mx)
	if (mn>mx) mn,mx=mx,mn
	if v<mn then
		return mn
	elseif v>mx then
		return mx
	else
		return v
	end
end

function clamp01(v)
	return clamp(v,0,1)
end
__gfx__
00000000555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700555665550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000556666550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000556666550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700555665550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
