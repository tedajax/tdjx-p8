pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

-- muzzle flashes
function new_flash(x, y, left)
	local fls = {}
	fls.x = x
	fls.y = y
	fls.left = left
	fls.frm = 10
	fls.dx = 0.6 + abs(ship.dx)
	if fls.left then fls.dx *= -1 end
		add(flashes, fls)
	return fls
end

function flash_update(fls)
	if t % 2 == 0 then
		fls.frm -= 1
	end
	fls.x += fls.dx
	if fls.frm <= 0 then
		fls.dead = true
	end
end

function flash_draw(fls)
	spr(5 + 10 - max(fls.frm, 4),
		fls.x, fls.y,
		1, 1,
		fls.left, false)
end

function new_bullet(x, y)
	blt = {}

	blt.x = x
	blt.y = y
	blt.dx = 0
	blt.dy = 0
	blt.hw = 3
	blt.hh = 3
	blt.spr = 4
	blt.life = 50
	blt.dead = false

	add(bullets, blt)

	return blt
end

function bullet_update(blt)
	blt.x += blt.dx
	blt.y += blt.dy
	blt.life -= 1
	if blt.life <= 0 then
		blt.dead = true
	end
end

function bullet_draw(blt)
	spr(blt.spr,
		blt.x - blt.hw,
		blt.y - blt.hh,
		1, 1,
		blt.dx < 0, false)
end

function _init()
	t = 0

	cam_x = 63
	cam_y = 63
	cam_kx = 0
	cam_kdx = 0.3
	cam_tx = 0

	ship = {}

	ship.x = 63
	ship.y = 63
	ship.dx = 0
	ship.dy = 0
	ship.spr = 1
	ship.left = false
	ship.acl_x = 0.1
	ship.acl_y = 0.4
	ship.dcl_x = 0.02
	ship.dcl_y = 0.08
	ship.max_x = 2
	ship.max_y = 1
	ship.fire_del = 0

	bullets = {}
	bullets.rem_q = {}

	flashes = {}
	flashes.rem_q = {}
end

function _update60()
	t += 1

	-- update bullets

	arr_clr(bullets.rem_q)

	for i = 1, #bullets do
		local blt = bullets[i]
		bullet_update(blt)
		if blt.dead then
			add(bullets.rem_q, i)
		end
	end

	fst_del(bullets, bullets.rem_q)

	-- update flashes

	arr_clr(flashes.rem_q)

	for i = 1, #flashes do
		local fls = flashes[i]
		flash_update(fls)
		if fls.dead then
			add(flashes.rem_q, i)
		end
	end

	fst_del(flashes, flashes.rem_q)

	-- update ship

	if btn(1) then
		ship.dx += ship.acl_x
		ship.left = false
	elseif btn(0) then
		ship.dx -= ship.acl_x
		ship.left = true
	else
		ship.dx = decay(ship.dx,
			ship.dcl_x)
	end

	if btn(3) then
		ship.dy += ship.acl_y
	elseif btn(2) then
		ship.dy -= ship.acl_y
	else
		ship.dy = decay(ship.dy,
			ship.dcl_y)
	end

	ship.dx = clamp(ship.dx,
		-ship.max_x, ship.max_x)
	ship.dy = clamp(ship.dy,
		-ship.max_y, ship.max_y)

	ship.x += ship.dx
	ship.y += ship.dy

	if t % 4 == 0 then
		ship.spr += 1
		if ship.spr > 2 then
			ship.spr = 1
		end
	end

	local tar = 0
	local lead = 20
	if ship.left then
		tar = -lead + 4
	else
		tar = lead + 4
	end

	cam_kx = decay(cam_kx, cam_kdx)

	cam_tx = lerp(cam_tx, tar, 0.1)
	cam_x = ship.x + cam_tx + cam_kx

	-- shoot
	if btn(4) then
		ship.fire_del -= 1
		if ship.fire_del <= 0 then
			ship.fire_del = 15
			cam_kx = 3
			local mx = 8
			if ship.left then
				mx *= -1
				cam_kx *= -1
			end
			new_flash(ship.x + mx,
				ship.y + 2,
				ship.left)
			local bx, by = ship.x, ship.y
			by += 6
			if ship.left then
				bx -= 2
			else
				bx += 11
			end
			b = new_bullet(bx, by)
			if ship.left then
				b.dx = -4
			else
				b.dx = 4
			end
		end
	else
		ship.fire_del = 0
	end
end

function _draw()
	cls()

	camera (0, 0)
	rectfill (0,0,127,127,1)

	camera(cam_x-64, cam_y-64)
	map(0, 0, 0, 0, 20, 20)
	spr(ship.spr, ship.x, ship.y,
	1, 1,
	ship.left, false)
	foreach(bullets, bullet_draw)
	foreach(flashes, flash_draw)

	-- line(cam_x+16, ship.y-4,
	-- 	cam_x+16, ship.y+12, 10)
	-- line(cam_x-16, ship.y-4,
	-- 	cam_x-16, ship.y+12, 10)
end

function lerp(a, b, t)
	return a + (b - a) * t
end

function fst_del(arr, idx)
	local l = #arr
	for i in all(idx) do
		arr[i] = nil
	end
	if #idx == l then
		return
	end
	for i = 1, l do
		if arr[i] == nil then
			while not arr[l]
				and l > i do
				l -= 1
			end
			if i ~= l then
				arr[i] = arr[l]
				arr[l] = nil
			else
				break
			end
		end
	end
end

function arr_clr(arr)
	for i, _ in pairs(arr) do
		arr[i] = nil
	end
end

function move_to(v, f, dv)
	if v < f then
		v += dv
		if v > f then v = f end
	elseif v > f then
		v -= dv
		if v < f then v = f end
	end
	return v
end

function decay(v, dv, tg)
	return move_to(v, tg or 0, dv)
end

function clamp(v, low, high)
	return max(min(v, high), low)
end

__gfx__
000000000d0000000d00000000000000aa70000000000000000a770000099a700000499a00000099000000490000000400000000000000000000000000000000
000000000dd000000dd00000000000009aa770000aa700000aaa770004999aaa0000049a00000049000000040000000000000000000000000000000000000000
007007000ddd00000ddd0000000000009aaa7000aa0000009aaaa00004999aaa0000499900000000000000090000000000000000000000000000000000000000
000770000066cc000866cc00000000009aaa70009777770099aaa77000449a77000449aa00000049000000090000000900000000000000000000000000000000
0007700009d66cd089d66cd0000000009aa770009777770099aaa77000449a77000449aa00000049000000090000000900000000000000000000000000000000
0070070000ddd66608ddd66600000000aa700000aa0000009aaaa00004999aaa0000499900000000000000090000000000000000000000000000000000000000
0000000000ddd55600ddd55600000000000000000aa700000aaa770004999aaa0000049a00000049000000040000000000000000000000000000000000000000
0000000000d0000000d00000000000000000000000000000000a770000099a700000499a00000099000000490000000400000000000000000000000000000000
44444444333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
43443444333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
43434343333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33343333333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
43333433333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33343333333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333343333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
