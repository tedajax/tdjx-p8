pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- snek.p8 by tdjx
-- copyright 2018

-- collision functions --
-- returns if sprite at x,y on map
-- has orange flag set to on
function pt_solid(x, y)
	value = mget(x, y)
	return fget(value, 1)
end

-- takes half width and half height
-- centered on x, y
function area_solid(x, y, hw, hh)
	return pt_solid(x-hw,y-hh)
		or pt_solid(x-hw, y+hh)
		or pt_solid(x+hw, y-hh)
		or pt_solid(x+hw, y+hh)
end

-- snake functions --
function new_snk()
	local snk = {}

	-- ** config **
	-- head sprite
	snk.sp_hd = 0
	-- tail sprite
	snk.sp_tl = 1

 -- frame move interval
 -- lower values mean fewer frames
 -- between movement
	snk.mv_itvl = 20

	-- pixels to move in a move
	snk.spd = 8

	-- ** init **
	local x = 64
	local y = 64

	-- length of the snake
	snk.len = 4
	-- segments of snake, head is
	-- always at tail[1]
	snk.tail = {}
	for i = 1, snk.len do
		local t = { x = x, y = y }
		add(snk.tail, t)
	end

	-- ** runtime **

	-- frames til next move
	snk.mv_frm = snk.mv_itvl
	-- cardinal direction of travel
	-- 0 none (uses last)
	-- 1 right, 2 up, 3 left, 4 right
	snk.dir = 0
	snk.last_dir = 0

	return snk
end

function snk_update(snk)
	if btn(1) then
		snk.dir = 1
	elseif btn(2) then
		snk.dir = 2
	elseif btn(0) then
		snk.dir = 3
	elseif btn(3) then
		snk.dir = 4
	end

	-- if last_dir is 0 no input
	-- has happened yet so don't move
	-- if dir is not 0 set last_dir
	-- to dir
	if snk.last_dir == 0
		and snk.dir == 0 then
		return
	elseif snk.last_dir == 0 then
		snk.last_dir = snk.dir
	end

	snk.mv_frm -= 1
	if snk.mv_frm <= 0 then
		-- reset move timer
		snk.mv_frm = snk.mv_itvl

		-- move each tail to prev tail
		for i = snk.len, 2, -1 do
			snk.tail[i].x = snk.tail[i-1].x
			snk.tail[i].y = snk.tail[i-1].y
		end

		-- grab dir and fallback to last
		-- if no dir supplied this move
		local dir = snk.dir
		if dir == 0 then
			dir = snk.last_dir
		else
			snk.last_dir = snk.dir
		end
		snk.dir = 0

		-- move in direction based on dir
		if dir == 1 then
			snk.tail[1].x += snk.spd
		elseif dir == 2 then
			snk.tail[1].y -= snk.spd
		elseif dir == 3 then
			snk.tail[1].x -= snk.spd
		elseif dir == 4 then
			snk.tail[1].y += snk.spd
		end
	end
end

function snk_draw(snk)
	local sx = snk.tail[1].x
	local sy = snk.tail[1].y

	-- render snk tail in reverse
	for i = snk.len, 1, -1 do
		local s = snk.tail[i]
		local sp = snk.sp_tl
		if i == 1 then
			spr(snk.sp_hd, s.x, s.y)
		else
			if s.x ~= sx or s.y ~= sy then
				spr(sp, s.x, s.y)
			end
		end
	end
end

function snk_head_pos(snk)
	return snk.tail[1].x,
		snk.tail[1].y
end

function snk_tail_pos(snk)
	return snk.tail[snk.len].x,
		snk.tail[snk.len].y
end

function snk_grow(snk, amt)
	local tx, ty = snk_tail_pos(snk)

	snk.len += amt
	for i = 1, amt do
		add(snk.tail, { x = tx, y = ty })
	end
end

-- globals --
t = 0
dt = 1 / 60
g = {}

-- pico-8 implementation --
function _init()
	g.s = new_snk()
end
lbp = false
bp = false
function _update60()
	t += 1
	snk_update(g.s)
	lbp = bp
	bp = btn(4)
	if bp and not lbp then
		snk_grow(g.s, 1)
	end
end

function _draw()
	cls()
	map(0, 0, 0, 0, 20, 20)
	snk_draw(g.s)
end
__gfx__
aaaaaaa3aaaaaaa31111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
abbbbbb3abbbbbb31cccccc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
abbbbbb3abbbbbb31c1111c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
abbaabb3abbbbbb31c1111c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
abbaabb3abbbbbb31c1111c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
abbbbbb3abbbbbb31c1111c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
abbbbbb3abbbbbb31cccccc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333331111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020000000000000000000000000000023f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020000000000000000000000000000023f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
020000000000000000000000000000023f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
