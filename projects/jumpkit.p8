pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
function _init()
	player=actor:new({x=8,y=0})
end

function _update()
	dt=1/30

	player.ddy=2*dt
	
	local ix,iy=0,0
	if (btn(0)) ix-=1
	if (btn(1)) ix+=1
	if (btn(2)) iy-=1
	if (btn(3)) iy+=1
	
	local accel=1.5*dt
	if not player:getf(af.grounded) then
		accel/=2
	end
	
	if ix<0 then
		player.dx-=accel
		player.face=-1
	end
	
	if ix>0 then
		player.dx+=accel
		player.face=1
	end
	
	local stand=player:getf(af.grounded)
	
	if stand then	
		player.jumps=0
	end
	
	local canjump= (stand)
		or	(not stand
						and player.jumps<1)

	if btnp(4) and canjump then
		player.dy=-0.6
		player.jumps+=1
	end
	
	player:move()
end

function _draw()
	cls()
	
	map(0,0,0,0,16,16)
	
	local sx,sy=w2s(player.x,player.y)
	spr(1,sx-4,sy-8,1,1,player.face<0)
	pset(sx,sy,8)
	
	draw_log()
end
-->8
-- actors

-- actor flags
af={
	grounded=shl(1,0),
}

actor={
	x=0,y=0,					-- position
	dx=0,dy=0,			-- velocity
	ddx=0,ddy=0,	-- acceleration
	w=0.3,h=0.5, -- half width/height
	face=1,
	flags=0,
	jumps=0,
	k_coldst=0.3, -- collision check distance
	k_scndst=0.1, -- scan distance while searching for contact point
	k_bounce=0
}

function actor:premove()
end

function actor:postmove()
end

function actor:move()
	self:setf(af.grounded,false)
	
	-- x movement
	local nx=self.x+
		self.dx+sgn(self.dx)*self.k_coldst
		
	if not solid(nx,self.y-0.5) then
		-- no contact, move normally
		self.x+=self.dx
	else
		-- hit solid
		-- find contact point
		while not solid(
			self.x+sgn(self.dx)*self.k_coldst,
			self.y-0.5)
		do
			self.x+=sgn(self.dx)*self.k_scndst
		end
		
		-- bounce
		self.dx*=-0.5
	end

	-- y movement	
	local left,right=
		self.x-0.2,self.x+0.2

	if self.dy<0 then
		-- going up
		if solid(left,self.y+self.dy-1) or
			solid(right,self.y+self.dy-1)
		then
			-- hit ceiling
			self.dy=0
			
			-- search contact point
			while not solid(left,self.y-1)
				and not solid(right,self.y-1)
			do
				self.y-=0.01
			end
		else
			self.y+=self.dy
		end
	else
		-- going down
		if solid(left,self.y+self.dy)
			or solid(right,self.y+self.dy)
		then
			-- bounce
			if self.k_bounce>0 and
				self.dy>0.2
			then
				self.dy*=-self.k_bounce
			else
				self:setf(af.grounded,true)
				self.dy=0
			end
			
			-- snap down
			while not solid(left,self.y)
				and not solid(right,self.y)
			do
				self.y+=0.05
			end
--			log(fget(mget(self.x,self.y),0))
			-- pop up
			while solid(left,self.y-0.1)
			do
				self.y-=0.05
			end
			while solid(right,self.y-0.1)
			do
				self.y-=0.05
			end
		else
			self.y+=self.dy
		end
	end
	
	self.dx+=self.ddx
	self.dy+=self.ddy
	
	if self:getf(af.standing) then
		self.dx*=0.8
		self.dy*=0.8
	else
		self.dx*=0.9
		self.dy*=0.9
	end
end

function actor:new(p)
	self.__index=self
	return setmetatable(p or {},self)
end

function actor:setf(f,v)
	if v then
		self.flags=bor(self.flags,f)
	else
		self.flags=band(self.flags,
			bnot(f))
	end
	return self.flags
end

function actor:getf(f)
	return band(self.flags,f)~=0
end
-->8
-- utils

_sgn=sgn
function sgn(v)
	if (v==0) return 0
	return _sgn(v)
end

_logs={}

function log(msg,col)
	add(_logs,{msg=tostr(msg),col=col or 6})
	local n=#_logs
	if n>20 then
		for i=2,n do
			_logs[i-1]=_logs[i]
		end
		_logs[n]=nil
	end
end

function draw_log()
	local n=#_logs
	for i=1,n do
		local l=_logs[i]
		print(l.msg,127-#l.msg*4,(i-1)*6,l.col)
	end
end
-->8
-- physics

function w2s(wx,wy)
	-- todo: camera
	return wx*8,wy*8
end

function solid(wx,wy)
	-- todo: other things
	return map_solid(wx,wy)
end

-- is world coord: wx,wy solid
-- 1 world unit == 8 pixels
function map_solid(wx,wy)
	if wx<0 or wx>127 or
		wy<0 or wy>127 then
		return false
	end
	val=mget(wx,wy)
	return fget(val,0)
end
__gfx__
00000000099999905555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000009aaaaa05555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070009aa1a105555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700009aaaaa05555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700099aaaaa95555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070099aaaaa95555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000099aaaaa95555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000099999905555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000002000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000202020200000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000020200000000000202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000200000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000002020200000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000020200000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000002000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
