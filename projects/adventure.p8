pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- adventure.p8
--    tdjx

-- frame by frame
_dbg_fbf=false
-- should advance 1 frame
_dbg_adv=false
_dbg_col=false
_dbg_deep=false

function _init()
	poke(0x5f2d,1)

	cam={x=0,y=0}

	actors={}
	daggers={}

	player=make_player()
	
	for i=1,5 do
		local tx,ty=rnd_tile_pos()
		gob=make_enemy("goblin",tx,ty)
	end
		
	room={}
	room.rx=0
	room.ry=0
	
	sleep_t=0
end

function onkey(key)
	if key=="n" then
		_dbg_fbf=not _dbg_fbf
	elseif key=="m" then
		if (_dbg_fbf) _dbg_adv=true
	elseif key=="l" then
		_dbg_col=not _dbg_col
	elseif key==";" then
		_dbg_deep=not _dbg_deep
	elseif key=="-" then
		_console={}
	end
end

function _update60()
	if (stat(30)) onkey(stat(31))
	
	if _dbg_fbf then
		if not _dbg_adv then
			return
		else
			_dbg_adv=false
		end
	end

	if sleep_t>0 then
		sleep_t-=1
		return
	end

	foreach(actors,update_actor)
	
	if player.x>(room.rx+1)*16 then
		change_room(room.rx+1,room.ry)
	elseif player.x<room.rx*16-1 then
		change_room(room.rx-1,room.ry)
	end
	
	if player.y>(room.ry+1)*16 then
		change_room(room.rx,room.ry+1)
	elseif player.y<room.ry*16-1 then
		change_room(room.rx,room.ry-1)
	end
	
	local daggers_rq={}
	for i,dg in pairs(daggers) do
		update_dagger(dg)
		if (dg.state==2) add(daggers_rq,i)
	end
	
	local actors_rq={}
	for i,a in pairs(actors) do
		if hasf(a.flags,k_actf_dead)
		then
			add(actors_rq,i)
		end
	end
	
	idelfa(actors,actors_rq)
	idelfa(daggers,daggers_rq)
end

function _draw()
	if (sleep_t>0) return

 cls(3)
	
	camera(cam.x*8,cam.y*8)
	
	map(room.rx*16,room.ry*16,cam.x*8,cam.y*8,16,16)
	foreach(actors,draw_actor)
	foreach(daggers,draw_dagger)
	
	camera()
	
--	print("pos:"..player.x..","..player.y,0,0,7)
	draw_console()
	
	if _dbg_fbf then
		print("fbf",117,123,8)
	end
end

function change_room(x,y)
	room.rx=x
	room.ry=y
	cam.x=room.rx*16
	cam.y=room.ry*16
end

k_left=0
k_right=1
k_up=2
k_down=3


-- daggers

dagger_id=0

k_dg_throw=0
k_dg_break=1
k_dg_destroy=2

-- spawn x,y
-- cdir: cardinal direction
--		0 right, 1 left, 2 up, 3 down
function make_dagger(x,y,cdir)
	dagger_id+=1

	local dg={}
	dg.x=x
	dg.y=y
	dg.id=dagger_id
	dg.cdir=cdir
	dg.dx,dg.dy=card_to_vel(dg.cdir)
	dg.spd=0.3
	dg.dx*=dg.spd
	dg.dy*=dg.spd
	
	-- collider data
	-- default to horizontal
	-- offset
	dg.offx,dg.offy=0,2/8
	-- dimensions
	dg.w,dg.h=.5,3/16
	
	-- if direction is vertical
	-- swap offset and dimensions
	if cdir>1 then
		dg.w,dg.h=dg.h,dg.w
		dg.offx,dg.offy=dg.offy,dg.offx
	end
	
	dg.life_frames=12
	dg.life_t=dg.life_frames
	dg.destroy_t=6
	
	dg.state=k_dg_throw
	
	return add(daggers,dg)
end

function update_dagger(dg)
	if dg.state==k_dg_throw then
 	dg.spd=lerp(dg.spd,0,0.2)
 
 	dg.dx,dg.dy=card_to_vel(dg.cdir)
 	dg.dx*=dg.spd
 	dg.dy*=dg.spd
 
 	local tlx,tly=dg.x-dg.w,
 		dg.y-dg.h
 	
 	if area_solid(tlx,tly,dg.w*2,dg.h*2,true)
 	then
 		dg.state=k_dg_break
 	end
 	
 	for i,a in pairs(actors) do
 		if dagger_hit_actor(dg,a)
 		then
 			actor_hit(a,1)
				dg.state=k_dg_break
				sleep(4)
 			break
 		end
 	end
 
 	dg.x+=dg.dx
 	dg.y+=dg.dy
 	
 	dg.life_t-=1
 	if dg.life_t<=0 then
			dg.state=k_dg_destroy
 	end
 elseif dg.state==k_dg_break then
 	dg.destroy_t-=1
 	if (dg.destroy_t<=0) dg.state=k_dg_destroy
 end
end

function dagger_hit_actor(dg,a)
	local colx,coly=
		dg.x-dg.w+dg.offx,
		dg.y-dg.h+dg.offy

	return hasf(a.flags,k_actf_enemy)
		and actor_overlap(a,
			colx,coly,
			dg.w*2,dg.h*2)
end

function draw_dagger(dg)
	local x=dg.x-dg.w
	local y=dg.y-dg.h
	local flx,fly=false,false
	if (dg.cdir==1) flx=true
	if (dg.cdir==3) flx,fly=true,true
	local sp=24
	if (dg.cdir>1) sp=25
	
--	if (dg.state==k_dg_break) sp+=2
	
	spr(sp,x*8,y*8,1,1,flx,fly)
	
	local colx,coly=(x+dg.offx)*8,
		(y+dg.offy)*8
		
	if _dbg_col then
		rect(colx,coly,
			colx+dg.w*16,
			coly+dg.h*16,7)
	end
end

function sleep(f) sleep_t=f end
-->8
-- utils

function lerp(a,b,t)
	return a+(b-a)*t
end

function mag(x,y)
	return sqrt(x*x+y*y)
end

function norm(x,y)
	local l=mag(x,y)
	if (l>0) return x/l,y/l
	return 0,0
end

function scale(x,y,scl)
	return x*scl,y*scl
end

function moveto(v,tg,r)
	if v<tg then
		return min(v+abs(r),tg)
	elseif v>tg then
		return max(v-abs(r),tg)	
	else
		return v
	end
end

function round(v)
	if v-flr(v)<0.5 then
		return flr(v)
	else
		return ceil(v)
	end
end

function roundh(v)
	local l=flr(v)
	if v-l<0.167 then
		return l
	elseif v-l<0.833 then
		return l+0.5
	else
		return ceil(v)
	end
end

function rand(mn,mx)
	mn=mn or 1
	if mx==nil then
		mx=mn
		mn=0
	elseif mn>mx then
		mn,mx=mx,mn
	end
	return p8rnd(mn,mx)
end

function irand(mn,mx)
	return flr(rnd(mn,mx))
end

function rnd_tile_pos()
	local tx,ty=0,0
	while true do
		tx=flr(rnd(16))
		ty=flr(rnd(16))
		if not solid(tx,ty) then
			return tx,ty
		end
	end
end


-----------------------------------
-- table utilities --
-----------------------------------
-- clear array
function clra(arr)
	for i, _ in pairs(arr) do
		arr[i] = nil
	end
end

function cpya(arr, dst)
	if dst then
		clra(dst)
	else
		dst = {}
	end
	for i = 1, #arr do
		dst[i] = arr[i]
	end
	return dst
end

function idxof(arr, v)
	local n = #arr
	for i = 1, n do
		if arr[n] == v then
			return i
		end
	end
	return -1
end

function contains(arr, v)
	return idxof(arr, v) >= 0
end

-- fast add, no check
function fadd(t, v)
	t[#t+1] = v
end

-- fast del, swap in last element
-- instead of maintaining order
function delf(t, v)
	local n = #t
	for i = 1, n do
		if t[i] == v then
			t[i] = t[n]
			t[n] = nil
			return true
		end
	end
	return false
end

-- delete at index, maintain order
function idel(t, i)
	local n = #t
	if i > 0 and i <= n then
		for j = i, n - 1 do
			t[j] = t[j + 1]
		end
		t[n] = nil
		return true
	end
	return false
end

-- delete [s, e], maintain order
-- compress for space
function idelr(t, s, e)
	local n = #t
	e = min(n, e)
	local d = e - s + 1
	for i = s, e do
		t[i] = nil
	end
	for i = e + 1, n do
		t[i - d] = t[i]
		t[i] = nil
	end
end

-- delete at index, swap in last
-- element, loses ordering
function idelf(t, i)
	local n = #t
	if i > 0 and i <= n then
		t[i] = t[n]
		t[n] = nil
		return true
	end
	return false
end

-- fast deletion of an array of
-- indices
function idelfa(arr, idx)
	local l = #arr

	for i in all(idx) do
		arr[i] = nil
	end
	if (#idx == l) return
	for i = 1, l do
		if arr[i] == nil then
			while not arr[l]
				and l > i
			do
				l -= 1
			end
			if i ~= l then
				arr[i] = arr[l]
				arr[l] = nil
			else return end
		end
	end
end
-----------------------------------

-- console
_console={}
function log(m)
	add(_console,m)
	if #_console>20 then
		idel(_console,1)
	end
end

function dlog(m)
	if (_dbg_deep) log(m)
end

function draw_console()
	for i=1,#_console do
		local msg=_console[i]
		print(msg,127-#msg*4,(i-1)*6,7)
	end
end
-------------------------------

function card_to_vel(cdir)
	if cdir==0 then return -1,0
	elseif cdir==1 then return 1,0
	elseif cdir==2 then return 0,-1
	elseif cdir==3 then return 0,1
	else return 0,0 end
end

_cdir_flip_table={1,0,3,2}
_cdir_cw_table={2,3,1,0}
_cdir_ccw_table={3,2,0,1}

function card_flip(cdir)
	return _cdir_flip_table[cdir+1]
end

function card_cw(cdir)
	return _cdir_cw_table[cdir+1]
end

function card_ccw(cdir)
	return _cdir_ccw_table[cdir+1]
end

-- flags

function setf(flg,f)
	return bor(flg,f)
end

function unsetf(flg,f)
	return band(flg,bnot(f))
end

function hasf(flg,f)
	return band(flg,f)~=0
end
-->8
-- physics

function area_solid(x,y,w,h,fly)
	return solid(x,y,fly) or
		solid(x+w,y,fly) or
		solid(x,y+h,fly) or
		solid(x+w,y+h,fly)
end

function solid(x,y,fly)
	fly=fly or false
	local m=mget(x,y)
	local solid=fget(m,0)
	if solid and y-flr(y)>=1/2 then
		m=mget(x,ceil(y))
		solid=fget(m,0)
	end
	if solid then
		return not fly or not fget(m,1)
	end
end

-->8
-- actors

-- actor flags
k_actf_dead=shl(1,0)
k_actf_fly=shl(1,1)
k_actf_enemy=shl(1,2)

-- actor constants
-- rate that an actor slides
-- to match the tile along
-- current axis
-- see update_actor for details
k_act_slide_rate=1/16

function make_actor(x,y,w,h,f,life)
	life=life or 3
	return add(actors,{
		x=x or 0,y=y or 0,
		w=w or 1,h=h or 1,
		dx=0,dy=0,
		mdir=-1,
		fdir=f or 0,
		flags=0,
		input={x=0,y=0},
		ctrl=nil,
		spd=0.1,
		spd_mul=1,
		life_mx=life,
		life=life,
		hit_t=0,
		hit_stun_f=8,
		sp=0,
		sp_t=0,
		sp_r=0.13,
	})
end

function update_actor(a)
	if a.ctrl~=nil then
		a.ctrl(a)
	end
	
	if a.hit_t>0 then
		a.hit_t-=1
	end
	
	local ix,iy=a.input.x,a.input.y
	
	if ix~=0 or iy~=0 then
		a.sp_t+=a.sp_r
		if a.sp_t>=2 then
			a.sp_t-=2
		end
	else
		a.sp_t=0
	end
	
	-- todo: better
	if ix~=0 and iy~=0 then
		iy=0
	end
		
	local req=-1
	if (ix<0) req=0
	if (ix>0) req=1
	if (iy<0) req=2
	if (iy>0) req=3
	
	a.mdir=req
	if a.mdir>=0 then
		a.fdir=a.mdir
	end

	local mx,my=card_to_vel(a.mdir)

	-- move to center of tile
	-- if not aligned along tile
	-- as movement is requested
	-- regardless of whether
	-- movement happens
	-- to make it possible to
	-- easily maneuver around
	-- corners
	if mx~=0 then
		local tgy=roundh(a.y)
		a.y=moveto(a.y,tgy,k_act_slide_rate)
	elseif my~=0 then
		local tgx=roundh(a.x)
		a.x=moveto(a.x,tgx,k_act_slide_rate)
	end

	local spd=a.spd*a.spd_mul
	
	if (a.hit_t>0) spd=0

	a.dx=mx*spd
	a.dy=my*spd
	
	if actor_move_solid(a) then
		a.dx=0
		a.dy=0
	end
	
	a.x+=a.dx
	a.y+=a.dy
end

function actor_move_solid(a,dx,dy)
	dx=dx or a.dx
	dy=dy or a.dy
	return area_solid(a.x+dx,a.y+dy,7/8,7/8)
end

function actor_overlap(a,x,y,w,h)
	dlog(a.y+a.h..">="..y..":"..tostr(a.y+a.h>=y))
	return a.x+a.w>=x and
		a.y+a.h>=y and
		a.x<=x+w and
		a.y<=y+h
end

function actors_in(x,y,w,h)
	local ret={}
	for i,a in pairs(actors) do
		if actor_overlap(a,x,y,w,h) then
			add(ret,a)
		end
	end
	return ret
end

function actor_hit(a,dmg)
	if a.hit_t<=0 then
		a.life-=dmg
		a.hit_t=a.hit_stun_f
		if a.life<=0 then
			a.flags=setf(a.flags,k_actf_dead)
		end
	end
end

function draw_actor(a)
	if a.hit_t>0 then
		for i=0,15 do
			pal(i,7)
		end
	end

	if a.draw then
		a.draw(a)
	else
		local sp,flx=a.sp,false
 	if a.fdir==0 then
 		flx=true
 	elseif a.fdir==2 then
 		sp+=4
 	elseif a.fdir==3 then
 		sp+=2
 	end
		spr(sp+a.sp_t,
 		a.x*8,a.y*8,
 		1,1,
 		flx,false)
	end
	
	if _dbg_col then
		rect(a.x*8,a.y*8,(a.x+7/8)*8,(a.y+7/8)*8,11)
	end
	
	pal()
end

-- player
function make_player()
	local pl=make_actor(8,8)
	pl.ctrl=ctrl_player
	--pl.draw=draw_player
	pl.sp=10
	pl.sp_t=0
	pl.sp_r=0.13
	pl.dagger_t=0
	return pl
end

function ctrl_player(pl)
	local ix,iy=0,0
	if (btn(0)) ix-=1
	if (btn(1)) ix+=1
	if (btn(2)) iy-=1
	if (btn(3)) iy+=1

	pl.input.x,pl.input.y=ix,iy
	
	if pl.dagger_t<=0 then
		pl.spd_mul=1
	else
		pl.spd_mul=0
		pl.dagger_t-=1
	end
	
	if (btnp(4)) then
		local sx,sy=card_to_vel(pl.fdir)
		local dgx,dgy=pl.x+sx*.5,
			pl.y+sy*.5
		if pl.fdir==0 then
			dgx+=1/2
			dgy+=2/8
		elseif pl.fdir==1 then
			dgx+=3/8
			dgy+=2/8
		elseif pl.fdir==2 then
			dgx+=2/8
			dgy+=1/2
		elseif pl.fdir==3 then
			dgx+=2/8
			dgy+=1/2
		end
		make_dagger(dgx,dgy,pl.fdir)
		pl.dagger_t=8
	end
end

function draw_player(pl)
	
	local sp,flx=10,false
	if pl.fdir==0 then
		flx=true
	elseif pl.fdir==2 then
		sp=14
	elseif pl.fdir==3 then
		sp=12
	end
	
	spr(sp+pl.sp_t,
		pl.x*8,pl.y*8,
		1,1,
		flx,false)
end

-- enemies

function make_enemy(kind,...)
	local fn=k_emake[kind]
	assert(fn)
	local e=fn(...)
	e.flags=setf(e.flags,k_actf_enemy)
	return e
end

function make_goblin(x,y,f)
	local gb=make_actor(x,y,1,1,f)
	gb.sp=17
	gb.spd=0.05
	gb.spd_mul=1
	gb.ctrl=ctrl_goblin
	gb.t0=irand(60,300)
	return gb
end

function ctrl_goblin(gb)
	gb.t0-=1
	if gb.t0<=0 then
		gb.t0=irand(60,300)
		gb.fdir=card_cw(gb.fdir)
	end

	local fx,fy=card_to_vel(gb.fdir)
	if actor_move_solid(gb) then
		gb.fdir=card_flip(gb.fdir)
		fx=0
		fy=0
	end
	
	gb.input.x=fx
	gb.input.y=fy
end

k_emake={}
k_emake["goblin"]=make_goblin
-->8
-- todo

-- daggers hitting enemies
-- multiple enemy types
-- screen transitions
-- world building
-->8
function
make_pool(fn_new,fn_reset)
	local pl={}
	pl.stack={}
	pl.fn_new=fn_new or function() return {} end
	pl.fn_reset=fn_reset or function() end

	pl.acq=function(...)
		local n=#pl.stack
		local ret=nil
		if n==0 then
			ret=self.fn_new(...)
		else
			ret=pl.stack[n]
			pl.stack[n]=nil
		end
		self.fn_reset(ret)
		return ret
	end
	
	pl.rel=function(obj)
		add(pl.stack,obj)
	end
	
	return pl
end


__gfx__
00000000000000000000000000000000000000000000000000000000000000000ccccc00000000000cccccc00cccccc00cccccc00cccccc000cccc0000cccc00
0000000000000000000000000000000000000000000000000000000000000000000ccc0000000000cf555500cf55550005555550055555500cccccc00cccccc0
0070070000000000000000000000000000000000000000000000000000000000000ddd0d00000000cfffcf00cfffcf00f5ffff5ff5ffff5ff5cccc5ff5cccc5f
0007700000000000000000000000000000000000000000000000000000000000000ddd0d0000000055fffff055fffff0ffcffcffffcffcfff555555ff555555f
00077000000000000000000000000000000000000000000000000000000000000dcdddcd00000000555fff05555fff05555ffff5555ffff50fccccf00fccccf0
0070070000000000000000000000000000000000000000000000000000000000ddccccc000000000cf5c55f5cf5c55f55f5cccc55f5cccc555c55c5f55c55c5f
0000000000000000000000000000000000000000000000000000000000000000d0ccccc000000000cffccc05cffccc05555c55ff555c55ff5ccccccf5ccccccf
000000000000000000000000000000000000000000000000000000000000000000c000c000000000055055005500055000000550555000000000055005500000
8088880800999900009999007989989009899897099999977999999000000000000000000000500000000000000050000cccccc00cccccc00000000000000000
082222800888989008889890707887077078870700899807708998000c0000c00000000000065000000000000006000005555550055555500000000000000000
82222228888997898889978989999998899999987988889999888897000cc000000000c000065000000000c000000000f5ffff5ff5ffff5f0000000000000000
8282282879989999799899999898898998988989998888899888889900c00c00555555cc000650005000050000060000ffcffcffffcffcff0000000000000000
8222222889988980898889809899998998999989988888877888888900c00c00066665cc000650000606000c000000000ffffff50ffffff50000000000000000
08288280979977777997777778888899998888877887788008877887000cc000000000c000055000000000c000005000555cccc5555cccc50000000000000000
088228800899888009988880099888977988899078888990099888870c0000c00000000000cccc000000000000c00c005f5c55ff5f5c55ff0000000000000000
800880080997099700099700799700077000799700009999999900000000000000000000000cc00000000000000c000055500550555000000000000000000000
000000000000000000000000000000000000000000000666666000000000000bb000000000000bbbbbb00000000000bbbb00000000000bbbbbb0000000000000
000000000000000000000000000000000b00000000066666666660000000000bb00000000000bbbbbbbb00000000bbbbb44440000000bbbbbbbb000000000000
000000000000000000000000000000000bb000000066666666666600000003bbbb30000000f0b444444b0f0000bbbfbb4444440000f0bbbbbbbb0f0000000000
0000000000000000000000000000000000bb000b0666666666666650000003bbbb30000000f0444444440f000bbbbff44444400000fbbbbbbbbbbf0000000000
00000000000000000000000000000000000000bb0666666666666650000003bbbb30000000ff4fbffbf4ff000b0bbfff4ffbf00000f4bbbbbbbb4f0000000000
00000000000000000000000000000000000000b066666666666665550000b333333b000000ff4f4ff4f4ff00000b44ff4ff4fff000ff44bbbb44ff0000000000
0000000000000000000000000000000000bb00006666666666666555000bbbbbbbbbb000000ffffffffff0000000444ffffff040000f444bb444f00000000000
00000000000000000000000000000000000000006666666666665555003bbbbbbbbbb300000bbff44ffbb00000000bbbbffff0400004b444444b400000000000
0000000000000000f44ff44400bbbb00000fff006666666666655555003bbbbbbbbbb300044444ffffbb4440000b44bbfff44f400044bbbbbbb4400000000000
0000000000000000f44f444f0bbbbb3000ff444066666666665555550b333333333333b044f4444bbbbbf44000044444fffb4f400044bbbbbbb44f0000000000
000000000000000044ff44ffbbbbbb330ff4444466666666655555550bbbbbbbbbbbbbb04fff44f44bbfff4000b44444ffbb404000044bbbbbb44f0000000000
00000000000000004ff44ff4bbbbb3330f4444440666666655555550bbbbbbbbbbbbbbbb44f444fb4444fff000bb4444bbb40040000bb444444bff0000000000
00000000000000004ff44ff4bbbbb333f4444f440666666555555550bbbbbbbbbbbbbbbb44f444f44bbbbf00044bbbbb4444b040000bbbbbbbbbb00000000000
00000000000000004f44ff44bbb333334444f44400666555555555003bbbbbbbbbbbbbb3444444fbbbbb00000444bbbbbbbb4400000444bbbbb4000000000000
00000000000000004f44ff44033333304444f444000555555555500003333334433333300fffff40044400000044400000444000000444400440000000000000
0000000000000000ff44f44400333300044444400000055555500000000000044000000000004440000000000000000000000000000044000000000000000000
5555555555ddfdfffffffffddfffddd5000000000000000000000000000000004444444441111111111111111111111400000000000000000000000000000000
dd5ddd5555ddffffffffdffffffdfdd5000000000000000000000000000000001c1c11114c1c11111c1c11111c1c111400000000000000000000000000000000
dddddddd5ddfdfffdffffffffffdfd550000000000000000000000000000000011c1111141c1111111c1111111c1111400000000000000000000000000000000
dffddfdd5dddffffffdffddffdffddd5000000000000000000000000000000001111111141111111111111111111111400000000000000000000000000000000
fddffdff5dddffdfddfddffdffffddd5000000000000000000000000000000001111111141111111111111111111111400000000000000000000000000000000
fffffffd55dfdfffddddddddfffdfdd50000000000000000000000000000000011111c1c41111c1c11111c1c11111c1400000000000000000000000000000000
fffdffff5ddfdfff55ddd5ddffffdd5500000000000000000000000000000000111111c1411111c1111111c1111111c400000000000000000000000000000000
dfffffff5dddfffd55555555ffdfdd55000000000000000000000000000000001111111141111111444444441111111400000000000000000000000000000000
55555555555555555dfdfdffffdffdd5000000000000000000000000000000004444444444444444411111111111111400000000000000000000000000000000
ddd5ddd55ddd5ddd5dffffffffffddd5000000000000000000000000000000001c1c11144c1c11114c1c11111c1c111400000000000000000000000000000000
ddddddd55ddfddff5ddffdfddfdffdd50000000000000000000000000000000011c1111441c1111141c1111111c1111400000000000000000000000000000000
fdffdfd55ddddffd55ddfffffffffd55000000000000000000000000000000001111111441111111411111111111111400000000000000000000000000000000
ffffdd5555dfffff5dfdffdfdffdddd5000000000000000000000000000000001111111441111111411111111111111400000000000000000000000000000000
dfdffdd55ddffdfd5dddddddffddfdd50000000000000000000000000000000011111c1441111c1c41111c1c11111c1400000000000000000000000000000000
ffffffd55dddffff5ddd5dddddd5ddd500000000000000000000000000000000111111c4411111c1411111c1111111c400000000000000000000000000000000
ffdfdfd55ddffdff5555555555555555000000000000000000000000000000001111111441111111444444444444444400000000000000000000000000000000
fffdf5d555ddfdffffdffffffffdffff000000000000000000000000000000001111111441111111111111111111111100000000000000000000000000000000
fffddd55d5dddffffffffdfffffffdff000000000000000000000000000000001c1c11111c1c11111c1c11111c1c111100000000000000000000000000000000
fdfdfddd5dddfffddffffffffdffdfff0000000000000000000000000000000011c1111111c1111111c1111111c1111100000000000000000000000000000000
ffdfddddfdfddffffdfdfffdfffffddd000000000000000000000000000000001111111111111111111111111111111100000000000000000000000000000000
dfffdfdfdddfffffddddfdfffffddfdf000000000000000000000000000000001111111111111111111111111111111100000000000000000000000000000000
fffffffdfffdffdfdddfdfdfdfffddd50000000000000000000000000000000011111c1c11111c1c11111c1c11111c1c00000000000000000000000000000000
ffdfffffffdfffff55dddffffffddd5d00000000000000000000000000000000111111c1111111c1111111c1111111c100000000000000000000000000000000
fffffdffffffdfff5d5fdfffffdfdd55000000000000000000000000000000001111111111111111411111111111111400000000000000000000000000000000
fddfffff000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000000000000000000000000000000000
ffffffff000000000000000000000000000000000000000000000000000000001c1c111100000000000000000000000000000000000000000000000000000000
ffffffff0000000000000000000000000000000000000000000000000000000011c1111100000000000000000000000000000000000000000000000000000000
ffffdffd000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000000000000000000000000000000000
fdffdfff000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000000000000000000000000000000000
ffffffff0000000000000000000000000000000000000000000000000000000011111c1c00000000000000000000000000000000000000000000000000000000
fdffffff00000000000000000000000000000000000000000000000000000000111111c100000000000000000000000000000000000000000000000000000000
ffffffdf000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000000000000000000000000000000000
00000099999000000000009999900000009999000099990000999900009999000099990000999900009999000099990000000000000000000000000000000000
00000009999890000000000999989000000898999989700000089899998970000009999999999000000999999999900000000000000000000000000000000000
00008888999789000000888899978900000007899870000000000789987000000000099999900000000009999990000000000000000000000000000000000000
00088889999778800008888999977880070897788779000000009778877980700000088888800700007008888880000000000000000000000000000000000000
00888889999999900088888999999990078999988999900000099998899998700070888888880900009088888888070000000000000000000000000000000000
00888888999979880088888899997988098997999979987007899799997998900099888888888990099888888888990000000000000000000000000000000000
08888998899978990888899989997899098997888879989009899788887998900999888888888990099888888888999000000000000000000000000000000000
07888999899899990788899989989999998998999989989009899899998998990999888888888890098888888888999000000000000000000000000000000000
08778999989999900877999888999990999899988999899009989998899989990999888888888890098888888888999000000000000000000000000000000000
08888899999999900888999988999990979899999999899999989999999989790998888888888870078888888888899000000000000000000000000000000000
08877779997777770777799977777900078889999998999999998999999888700798778888877870078778888877897000000000000000000000000000000000
08888888998990000888899888889900078788888888999999998888888878700788887777788870078887777788887000000000000000000000000000000000
99888899888000009988888888880000008877888887979009797888887788000788888888888070070888888888887000000000000000000000000000000000
00888999998000000089998888880000009998777778870000788777778999000098888898899000000998898888890000000000000000000000000000000000
00000999970000000099999988899900099999888889979009799888889999900999888888999900009999888888999000000000000000000000000000000000
00000000000000000099999809999800079797000000000000000000007979700000000000999900009999000000000000000000000000000000000000000000
bbbbbbcccccbbbbbbbbbbbcccccbbbbb009999000099990079899890098998970999999779999990000000000000000000000000000000000000000000000000
bbbbbbbcccc0cbbbbbbbbbbcccc0cbbb088898900888989070977907709779070089980770899800000000000000000000000000000000000000000000000000
bbbb0000ccc80cbbbbbb0000ccc80cbb888997898889978989799798897997987988889999888897000000000000000000000000000000000000000000000000
bbb0000cccc8800bbbb0000cccc8800b799899997998999998788789987887899988888998888899000000000000000000000000000000000000000000000000
bb00000ccccccccbbb00000ccccccccb899889808988898098999989989999899888888778888889000000000000000000000000000000000000000000000000
bb000000cccc8c00bb000000cccc8c00979977777997777778888899998888877887788008877887000000000000000000000000000000000000000000000000
b0000cc00ccc80ccb0000ccc0ccc80cc089988800998888009988897798889907888899009988887000000000000000000000000000000000000000000000000
b8000ccc0cc0ccccb8000ccc0cc0cccc099709970009970079970007700079970000999999990000000000000000000000000000000000000000000000000000
b0880cccc0cccccbb088ccc000cccccb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b00000cccccccccbb000cccc00cccccb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b008888ccc888888b8888ccc88888cbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b0000000cc0ccbbbb0000cc00000ccbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc0000cc000bbbbbcc0000000000bbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bb000ccccc0bbbbbbb0ccc000000bbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbcccc8bbbbbbbbcccccc000cccbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbbbbbbbbbbbccccc0bcccc0bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
fddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddffffffddfffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffd
fdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdfff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdffffff
ffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdf
fddffffffffdfffffffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdffdffffffddfffff
fffffffffffffdffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdffffffffdffffffffff
fffffffffdffdfffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffffffffff
ffffdffdfffffdddffdffddfffdffddfffdffddfffdffddfffdffddfffdffddfffdffddfffdffddfffdffddfffdffddfffdffddfffdffddffdfdfffdffffdffd
fdffdffffffddfdfddfddffdddfddffdddfddffdddfddffdddfddffdddfddffdddfddffdddfddffdddfddffdddfddffdddfddffdddfddffdddddfdfffdffdfff
ffffffffdfffddd5dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddfdfdfffffffff
fdfffffffffddd5d55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55ddd5dd55dddffffdffffff
ffffffdfffdfdd555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555d5fdfffffffffdf
fddfffffdfffddd533333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd53b3333333b33333333333333333333333333333333333333333333333333333333333333333333333b3333333333333355ddffffffffffff
fffffffffffdfd553bb333333bb3333333333333333333333333333333333333333333333333333333333333333333333bb33333333333335ddfdfffffffffff
ffffdffdfdffddd533bb333b33bb333b333333333333333333333333333333333333333333333333333333333333333333bb333b333333335dddffffffffdffd
fdffdfffffffddd5333333bb333333bb3333333333333333333333333333333379899893333333333333333333333333333333bb333333335dddffdffdffdfff
fffffffffffdfdd5333333b3333333b33333333333333333333333333333333373788737333333333333333333333333333333b33333333355dfdfffffffffff
fdffffffffffdd5533bb333333bb3333333333333333333333333333333333338999999833333333333333333333333333bb3333333333335ddfdffffdffffff
ffffffdfffdfdd557999999333333333333333333333333333333333333333339898898933333333333333333333333333333333333333335dddfffdffffffdf
fddfffffdfffddd573899833333333333333333333333333333333333333333398999989333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd5998888973b33333333333333333333333333333333333333788888993333333333333333333333333b3333333b33333355ddffffffffffff
fffffffffffdfd55988888993bb3333333333333333333333333333333333333399888973333333333333333333333333bb333333bb333335ddfdfffffffffff
ffffdffdfdffddd57888888933bb333b333333333333333333333333333333337997333733333333333333333333333333bb333b33bb333b5dddffffffffdffd
fdffdfffffffddd538877887333333bb3333333333333333333333333333333333333333333333333333333333333333333333bb333333bb5dddffdffdffdfff
fffffffffffdfdd539988887333333b33333333333333333333333333333333333333333333333333333333333333333333333b3333333b355dfdfffffffffff
fdffffffffffdd559999333333bb3333333333333333333333333333333333333333333333333333333333333333333333bb333333bb33335ddfdffffdffffff
ffffffdfffdfdd553333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335dddfffdffffffdf
fddfffffdfffddd5333333333333333333333333333fff3333333333333333333333333333333333333fff3333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd533333333333333333333333333ff44433333333333333333333333333333333333ff444333333333333333333b33333355ddffffffffffff
fffffffffffdfd553333333333333333333333333ff44444333333333333333333333333333333333ff4444433333333333333333bb333335ddfdfffffffffff
ffffdffdfdffddd53333333333333333333333333f444444333333333333333333333333333333333f444444333333333333333333bb333b5dddffffffffdffd
fdffdfffffffddd5333333333333333333333333f4444f4433333399993333333333333333333333f4444f443333333333333333333333bb5dddffdffdffdfff
fffffffffffdfdd53333333333333333333333334444f444333339898883333333333333333333334444f4443333333333333333333333b355dfdfffffffffff
fdffffffffffdd553333333333333333333333334444f444333398799888333333333333333333334444f444333333333333333333bb33335ddfdffffdffffff
ffffffdfffdfdd553333333333333333333333333444444333339999899733333333333333333333344444433333333333333333333333335dddfffdffffffdf
fddfffffdfffddd53333333333333333333fff33333fff3333333898899833333333333333333333333fff33333fff33333333333333333355ddfdfffddfffff
fffffffffffdfdd5333333333333333333ff444333ff44433333777799793333333333333333333333ff444333ff4443333333333b33333355ddffffffffffff
fffffffffffdfd5533333333333333333ff444443ff44444333338889983333333333333333333333ff444443ff44444333333333bb333335ddfdfffffffffff
ffffdffdfdffddd533333333333333333f4444443f444444333379937993333333333333333333333f4444443f4444443333333333bb333b5dddffffffffdffd
fdffdfffffffddd53333333333333333f4444f44f4444f4433333333333333333333333333333333f4444f44f4444f4433333333333333bb5dddffdffdffdfff
fffffffffffdfdd533333333333333334444f4444444f444333333333333333333333333333333334444f4444444f44433333333333333b355dfdfffffffffff
fdffffffffffdd5533333333333333334444f4444444f444333333333333333333333333333333334444f4444444f4443333333333bb33335ddfdffffdffffff
ffffffdfffdfdd553333333333333333344444433444444333333333333333333333333333333333344444433444444333333333333333335dddfffdffffffdf
fddfffffdfffddd533333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd533333333333333333333333333333333333333333b33333333333333333333333333333333333333333333333333333355ddffffffffffff
fffffffffffdfd5533333333333333333333333333333333333333333bb333333333333333333333333333333333333333333333333333335ddfdfffffffffff
ffffdffdfdffddd5333333333333333333333333333333333333333333bb333b3333333333333333333333333333333333333333333333335dddffffffffdffd
fdffdfffffffddd53333333333333333333333333333333333333333333333bb3333333333333333333333333333333333333333333333335dddffdffdffdfff
fffffffffffdfdd53333333333333333333333333333333333333333333333b333333333333333333333333333333333333333333333333355dfdfffffffffff
fdffffffffffdd55333333333333333333333333333333333333333333bb33333333333333333333333333333333333333333333333333335ddfdffffdffffff
ffffffdfffdfdd553333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335dddfffdffffffdf
fddfffffdfffddd533999933333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd53989888333333333333333333333333333333333333333333b3333333b3333333333333333333333333333333333333355ddffffffffffff
fffffffffffdfd559879988833333333333333333333333333333333333333333bb333333bb33333333333333333333333333333333333335ddfdfffffffffff
ffffdffdfdffddd599998997333333333333333333333333333333333333333333bb333b33bb333b333333333333333333333333333333335dddffffffffdffd
fdffdfffffffddd5389889983333333333333333333333333333333333333333333333bb333333bb333333333333333333333333333333335dddffdffdffdfff
fffffffffffdfdd5777799793333333333333333333333333333333333333333333333b3333333b33333333333333333333333333333333355dfdfffffffffff
fdffffffffffdd5538889983333333333333333333333333333333333333333333bb333333bb3333333333333333333333333333333333335ddfdffffdffffff
ffffffdfffdfdd557993799333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335dddfffdffffffdf
fddfffffdfffddd53333333333333333333333333333333333333333333333333cccccc3333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd53333333333333333333333333333333333333333333333333b5555fc3b3333333333333333333333333333333333333355ddffffffffffff
fffffffffffdfd553333333333333333333333333333333333333333333333333bfcfffc3bb33333333333333333333333333333333333335ddfdfffffffffff
ffffdffdfdffddd53333333333333333333333333333333333333333333333333fffff5533bb333b333333333333333333333333333333335dddffffffffdffd
fdffdfffffffddd533333333333333333333333333333333333333333333333353fff555333333bb333333333333333333333333333333335dddffdffdffdfff
fffffffffffdfdd53333333333333333333333333333333333333333333333335f55c5fc333333b33333333333333333333333333333333355dfdfffffffffff
fdffffffffffdd5533333333333333333333333333333333333333333333333353cccffc33bb3333333333333333333333333333333333335ddfdffffdffffff
ffffffdfffdfdd553333333333333333333333333333333333333333333333333355355333333333333333333333333333333333333333335dddfffdffffffdf
fddfffffdfffddd533333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd533333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355ddffffffffffff
fffffffffffdfd553333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335ddfdfffffffffff
ffffdffdfdffddd53333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335dddffffffffdffd
fdffdfffffffddd53333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335dddffdffdffdfff
fffffffffffdfdd533333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355dfdfffffffffff
fdffffffffffdd553333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335ddfdffffdffffff
ffffffdfffdfdd553333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335dddfffdffffffdf
fddfffffdfffddd53333333333333333333fff33333fff3333333333333333333333333333333333333fff33333fff33333333333333333355ddfdfffddfffff
fffffffffffdfdd5333333333b33333333ff444333ff44433333333333333333333333333333333333ff444333ff4443333333333333333355ddffffffffffff
fffffffffffdfd55333333333bb333333ff444443ff44444333333333333333333333333333333333ff444443ff4444433333333333333335ddfdfffffffffff
ffffdffdfdffddd53333333333bb333b3f4444443f444444333333333333333333333333333333333f4444443f44444433333333333333335dddffffffffdffd
fdffdfffffffddd533333333333333bbf4444f44f4444f4433333333333333333333333333333333f4444f44f4444f4433333333333333335dddffdffdffdfff
fffffffffffdfdd533333333333333b34444f4444444f444333333333333333333333333333333334444f4444444f444333333333333333355dfdfffffffffff
fdffffffffffdd553333333333bb33334444f4444444f444333333333333333333333333333333334444f4444444f44433333333333333335ddfdffffdffffff
ffffffdfffdfdd553333333333333333344444433444444333333333333333333333333333333333344444433444444333333333333333335dddfffdffffffdf
fddfffffdfffddd5333333333333333333333333333fff3333333333333333333333333333333333333fff3333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd53b3333333b3333333b33333333ff44433333333333333333333333333333333333ff444333333333333333333333333355ddffffffffffff
fffffffffffdfd553bb333333bb333333bb333333ff44444333333333333333333333333333333333ff444443333333333333333333333335ddfdfffffffffff
ffffdffdfdffddd533bb333b33bb333b33bb333b3f444444333333333333333333333333333333333f4444443333333333333333333333335dddffffffffdffd
fdffdfffffffddd5333333bb333333bb333333bbf4444f4433333333333333333333333333333333f4444f443333333333333333333333335dddffdffdffdfff
fffffffffffdfdd5333333b3333333b3333333b34444f444333333333333333333333333333333334444f44433333333333333333333333355dfdfffffffffff
fdffffffffffdd5533bb333333bb333333bb33334444f444333333333333333333333333333333334444f4443333333333333333333333335ddfdffffdffffff
ffffffdfffdfdd553333333333333333333333333444444333333333333333333333333333333333344444433333333333333333333333335dddfffdffffffdf
fddfffffdfffddd533333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd53b3333333b3333333b3333333b333333333333333333333333333333333333333333333333333333333333333333333355ddffffffffffff
fffffffffffdfd553bb333333bb333333bb333333bb3333333333333333333333333333333333333333333333333333333333333333333335ddfdfffffffffff
ffffdffdfdffddd533bb333b33bb333b33bb333b33bb333b33333333333333333333333333333333333333333333333333333333333333335dddffffffffdffd
fdffdfffffffddd5333333bb33339999333333bb333333bb33333333333333333333333333333333333333333333333333333333333333335dddffdffdffdfff
fffffffffffdfdd5333333b333398988833333b3333333b3333333333333333333333333333333333333333333333333333333333333333355dfdfffffffffff
fdffffffffffdd5533bb33333398799888bb333333bb333333333333333333333333333333333333333333333333333333333333333333335ddfdffffdffffff
ffffffdfffdfdd553333333333999989973333333333333333333333333333333333333333333333333333333333333333333333333333335dddfffdffffffdf
fddfffffdfffddd533333333333898899833333333333333333333333333333333333333333333333333333333333333333333333333333355ddfdfffddfffff
fffffffffffdfdd53b33333333777799793333333333333333333333333333333b3333333b33333333333333333333333b3333333333333355ddffffffffffff
fffffffffffdfd553bb33333333888998bb333333333333333333333333333333bb333333bb3333333333333333333333bb33333333333335ddfdfffffffffff
ffffdffdfdffddd533bb333b3379937993bb333b33333333333333333333333333bb333b33bb333b333333333333333333bb333b333333335dddffffffffdffd
fdffdfffffffddd5333333bb33333333333333bb333333333333333333333333333333bb333333bb3333333333333333333333bb333333335dddffdffdffdfff
fffffffffffdfdd5333333b333333333333333b3333333333333333333333333333333b3333333b33333333333333333333333b33333333355dfdfffffffffff
fdffffffffffdd5533bb33333333333333bb333333333333333333333333333333bb333333bb3333333333333333333333bb3333333333335ddfdffffdffffff
ffffffdfffdfdd553333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333335dddfffdffffffdf
fddffffffffdf5d555555555555555555555555555555555555555555555555533333333333333335555555555555555555555555555555555ddfdfffddfffff
fffffffffffddd55dd5ddd55dd5ddd55dd5ddd55dd5ddd55dd5ddd55ddd5ddd53b3333333b3333335ddd5ddddd5ddd55dd5ddd55dd5ddd55d5dddfffffffffff
fffffffffdfdfdddddddddddddddddddddddddddddddddddddddddddddddddd53bb333333bb333335ddfddffdddddddddddddddddddddddd5dddfffdffffffff
ffffdffdffdfdddddffddfdddffddfdddffddfdddffddfdddffddfddfdffdfd533bb333b33bb333b5ddddffddffddfdddffddfdddffddfddfdfddfffffffdffd
fdffdfffdfffdfdffddffdfffddffdfffddffdfffddffdfffddffdffffffdd55333333bb333333bb55dffffffddffdfffddffdfffddffdffdddffffffdffdfff
fffffffffffffffdfffffffdfffffffdfffffffdfffffffdfffffffddfdffdd5333333b3333333b35ddffdfdfffffffdfffffffdfffffffdfffdffdfffffffff
fdffffffffdffffffffdfffffffdfffffffdfffffffdfffffffdffffffffffd533bb333333bb33335dddfffffffdfffffffdfffffffdffffffdffffffdffffff
ffffffdffffffdffdfffffffdfffffffdfffffffdfffffffdfffffffffdfdfd533333333333333335ddffdffdfffffffdfffffffdfffffffffffdfffffffffdf
fddffffffddffffffddffffffddffffffddffffffddffffffddfffffdfffddd5333333333333333355ddfdfffddffffffddffffffddffffffddffffffddfffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfdd53b3333333b33333355ddffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfd553bb333333bb333335ddfdfffffffffffffffffffffffffffffffffffffffffff
ffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdfdffddd533bb333b33bb333b5dddffffffffdffdffffdffdffffdffdffffdffdffffdffd
fdffdffffdffdffffdffdffffdffdffffdffdffffdffdffffdffdfffffffddd5333333bb333333bb5dddffdffdffdffffdffdffffdffdffffdffdffffdffdfff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfdd5333333b3333333b355dfdfffffffffffffffffffffffffffffffffffffffffff
fdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdffffffffffdd5533bb333333bb33335ddfdffffdfffffffdfffffffdfffffffdfffffffdffffff
ffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffffffdfffdfdd5533333333333333335dddfffdffffffdfffffffdfffffffdfffffffdfffffffdf

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000001010101000000000000000000010101010101010000000000000001010101000000000303030300000000010101010000000003030303000000000101010100000000030303030000000001000000000000000300000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
7070707070707070707070707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7063424242424242424242424242627000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043242400000000000000002400417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043002400000000000000002424417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043000000340000000034000024417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043000034340000000034340024417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043000000000024000000000000417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043000000000000242400000000417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043000000000000242400000000417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043000000000000000000000000417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043002434340000000034340000417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043242424340000000034000000417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043242424240000000000000000417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7043240024000000242400002400417000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7060404040404050242451404040617000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7070707070707043242441707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6342424242424253242452424242426200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000002424242424000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300002400000000242400002400004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000240000000000240000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000000000240000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000000000000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000002400000024000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000000000000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300240000000000000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000000000000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000594858000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
430000000049784b000024000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
43000000005a4a5b000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000240000000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4300000000000000000000000000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6040404040404040404040404040406100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
