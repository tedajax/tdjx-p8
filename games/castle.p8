pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- castle.p8
-- by: tdjx

function _init()
	debug={
		view_log="watch"
	}
	
	-- uncomment to disable debug
 --	debug=nil
	
	-- 64x64 mode
--	poke(0x5f2c,3)
	
	if debug then
		-- kb/mouse for debug
		poke(0x5f2d,1)
	end
	
	entities={}
	solid_entities={}
	overlap_entities={}
	overlap_triggers={}
	stand_triggers={}
	attack_triggers={}
	
	for mx=0,127 do
		for my=0,63 do
			local m=mget(mx,my)
			parse_tile(m,mx,my)
		end
	end
	
	set_anim(pl,{8})
	

	-- move solid entities
	-- in front of player
	for e in all(solid_entities)
	do
		add(entities,del(entities,e))
	end	

	-- move player to front
	add(entities,del(entities,pl))
	
	_update=play_update
	_draw=play_draw
end

function keypress(key)
	if key=="1" then
		debug.view_log="watch"
	elseif key=="2" then
		debug.view_log="log"
	elseif key=="3" then
		debug.view_log="ents"
	end
end

function parse_tile(‚ñë,x,y)
	local sx,sy=w2s(x,y)
	if ‚ñë==24 then
		pl=make_player(sx+4,sy+5)
		mset(x,y,0)
	elseif ‚ñë==48 then
		sp=make_spring_bud(sx+4,sy+4)
		mset(x,y,0)
	elseif ‚ñë==20 then
		sp=make_platform(sx+4,sy+4)
		mset(x,y,0)
	end
end

function check_keys()
	while stat(30) do
		keypress(stat(31))
	end
end

function play_update()
	check_keys()

	proc_input(pl)
	foreach(entities,
		function(e) e:on_update() end)
		
	for e in all(overlap_entities)
	do
		for t in all(overlap_triggers)
		do
			if t.overlap_‚ßó<=0
				and aabb(e,t)
			then
				t:on_trigger(e)
			end
		end
	end
	
	if btnp(‚ùé) then
		for t in all(attack_triggers)
		do
			t:on_trigger(e)
		end
	end

	watch(stat(0)/204.8)
	watch(stat(1)*100)
	watch(stat(2)*100)
	
	watch("pos:"..pl.x..","..pl.y)
	watch("vel:"..pl.dx..","..pl.dy)
	watch("af:"..pl.frame)
	watch("am:"..pl.anim_mode)
	
	foreach(entities,function(e)
		logent(e.name)
	end)
end

function play_draw()
	cls()
	
--	camera(pl.x-32,pl.y-32)
	
	map(0,0,0,0,16,16)
	
	foreach(entities,
		function(e) e:on_draw() end)

	camera()
	draw_log(debug.view_log)
	clear_frame_logs()
end
-->8
-- utilities

function tblcpy(src,dst)
	dst=dst or {}
	for k,v in pairs(src) do
		dst[k]=v
	end
	return dst
end

function aabb(t1,t2)
	return t1.x+t1.w>=t2.x-t2.w
		and t1.x-t1.w<=t2.x+t2.w
		and t1.y+t1.w>=t2.y-t2.w
		and t1.y-t1.w<=t2.y+t2.w
end

function make_flag_enum(...)
	local enum={}
	for i,f in ipairs({...}) do
		enum[f]=0x0000.0001<<i-1
	end
	return enum
end

function make_flags(enum,...)
	local flags=0
	for i,f in ipairs({...}) do
		flags=flags|enum[f]
	end
	return flags
end

function sgn3(v)
	if (v==0) return 0
	return sgn(v)
end

-- world to screen
function w2s(x,y)
	return x*8,y*8
end

function s2w(x,y)
	return x/8,y/8
end

-- algebra
function len2(x,y)
	return x*x+y*y
end

function len(x,y)
	return sqrt(x*x+y*y)
end

function norm(x,y)
	local l=len(x,y)
	if (l==0) return 0,0
	return x/l,y/l
end

-- width of string
function strw(s)
	-- todo handle special chars
	return #s*4
end

-- logging
_logs={
	watch={log={},col=11},
	log={log={},col=6},
	ents={log={},col=10,bg=1},
}

function add_log(log,msg,col)
	add(log.log,{
		msg=msg or "",
		col=col or log.col
	})
end

function log(msg,col)
	add_log(_logs.log,msg,col)
	if #_logs.log.log>16 then
		deli(_logs.log.log,1)
	end
end

function watch(msg,col)
	add_log(_logs.watch,msg,col)
end

function logent(msg,col)
	add_log(_logs.ents,msg,col)
end

function clear_frame_logs()
	_logs.watch.log={}
	_logs.ents.log={}
end

function draw_log(name)
	local lg=_logs[name]
	assert(lg~=nil)
	
	local bg=lg.bg
	
	if bg~=nil then
		local sw=0
		local n=0
		for i,l in ipairs(lg.log) do
			local lsw=strw(l.msg)
			if (lsw>sw) sw=lsw
			n=i
		end
		rectfill(0,0,sw,n*6,bg)
	end

	for i,l in ipairs(lg.log) do
		local y=(i-1)*6
		print(l.msg,1,y+1,l.col)
	end
end

-->8
-- entities

entity={}

function make_entity(params)
	local e={
		‚ßó=0,						-- frames active
		x=0,y=0,			-- position
		dx=0,dy=0,	-- velocity
		fdx=0,fdy=0, -- frame velocity, resets every frame, use to nudge
		ix=1,iy=1, -- inv friction
		physdx=0,		-- additional delta
		physdy=0,		-- added by collision resolution
		w=4,h=4,			-- half extents
		g=0,							-- gravity
		hp=1,   			-- health
		air_‚ßó=0,

		-- flags
		visible=true,
		collide=true,
		in_air=false,
		
		-- sprite
		facing=1,
		sw=8,sh=8,	 -- screen dim
		tw=1,th=1,	 -- tile dim
		
		-- animation
		frame=1,
		frames={1},
		fs=4,
		fc=0,
		fblend=0,
		fprio=0,
		-- valid modes
		--		pause, stay on current frame
		--		play, play anim normally
		--  loop, play normally and loop
		--		blend, set frame based on fblend (0-1)
		anim_mode="pause",
		
		on_draw=entity_draw,
		on_update=entity_update,
		on_air=function()end,
		on_land=function()end,
		on_hit_ceiling=function()end,
		on_hit_wall=function()end,
		on_fall=function()end,
		contains=entity_contains,
	
	}
	setmetatable(e,entity)
	tblcpy(params,e)
	return add(entities,e)
end

function set_anim(e,frames,mode,prio)
	prio=prio or 0
	if (e.frames==frames) return
	if (prio < e.fprio) return
	e.fprio=prio or 0
	e.frames=frames
	e.frame=1
	e.fc=0
	e.fs=4
	e.anim_mode=mode or "play"
end

function entity_draw(e)
	if (not e.visible) return
	
	spr(e.frames[e.frame],
		e.x-e.sw/2,
		e.y-e.sh/2,
		e.tw,e.th,
		e.facing==-1)
end

function entity_move_x(e)
	e.x+=e.dx+e.fdx
	e.dx*=e.ix
	e.fdx=0
end

function entity_move_y(e)
	if e.in_air or not e.collide
	then
		e.y+=e.dy+e.fdy
		e.dy=min(4,e.dy+e.g)
		e.dy*=e.iy
	else
		e.y+=e.fdy
	end
	e.fdy=0
end

function entity_update(e)
	e.‚ßó+=1
	
	-- last values
	e.ldx=e.dx
	e.ldy=e.dy
	e.lx2=e.lx
	e.ly2=e.ly
	e.lx=e.x
	e.ly=e.y
		
	entity_move_x(e)
	
	-- horizontal collision
	if e.collide then
		local hit,side=phys_side(e)
		if hit then
			e:on_hit_wall(side)
		end
	end

	entity_move_y(e)
	
	if e.collide then
		e.physdy=0
		local ly=e.y
		if phys_floor(e) then
			if e.in_air then
				e:on_land()
			end
			e.in_air=false
		else
			e.stand_entity=nil
			if not e.in_air and e.dy==0
			then
				if should_fall(e) then
					if not e.in_air then
						e:on_fall()
						e:on_air()
					end
					e.in_air=true
				end
			else
				if not e.in_air then
					e:on_air()
				end
				e.in_air=true
			end
		end
		if phys_roof(e) then
			e:on_hit_ceiling()
		end
		e.physdy=e.y-ly
	end
	
	if e.in_air then
		e.air_‚ßó+=1
	else
		e.air_‚ßó=0
	end
	
	-- update animation
	if e.anim_mode=="play"
		or e.anim_mode=="loop"
	then
  e.fc+=1
  
  if e.fc==e.fs then
	  e.fc=0
	  e.frame+=1
	  if e.frame>#e.frames then
	   if e.anim_mode=="loop" then
	    e.frame=1
	   else
	    e.frame=#e.frames
	    e.fprio=0
	   end
	  end
	 end
 elseif e.anim_mode=="blend" then
 	local nf=#e.frames
 	local b=mid(e.fblend,0,1-0x0000.0001)
 	e.frame=flr(nf*b)+1
 end
end

function destroy_entity(e)
	del(entities,e)
	del(solid_entities,e)
	del(overlap_entities,e)
	del(overlap_triggers,e)
	del(stand_triggers,e)
	del(attack_triggers,e)
end

function entity_contains(e,x,y)
	return x>=e.x-e.w and
		x<=e.x+e.w and
		y>=e.y-e.h and
		y<=e.y+e.h
end
-->8
-- player

pl_anim_idle={24}
pl_anim_walk={24,25}
pl_anim_air={28,29,30,31}
pl_anim_land={26}
pl_anim_land_hard={26,27}

function make_player(px,py)
	pl_g=0.35
	pl_jumpf=3

	local e=make_entity({
		name="player",
		x=px,y=py,
		g=pl_g,
		ix=0,
		w=3,
		jump_‚ßó=0,
		canjump=false,
		physent=true,
		stand_entity=nil,
		on_update=player_update,
		on_air=player_on_air,
		on_land=player_on_land,
	})
	
	add(overlap_entities,e)
	return e
end

function proc_input(e)
	local inx,iny=0,0
	if (btn(‚¨ÖÔ∏è)) inx-=1
	if (btn(‚û°Ô∏è)) inx+=1
	if (btn(‚¨ÜÔ∏è)) iny-=1
	if (btn(‚¨áÔ∏è)) iny+=1
	
	if inx~=0 then
		e.dx+=inx
		e.facing=sgn(inx)
	end
	
	if not e.in_air then
		if inx~=0 then
			set_anim(e,pl_anim_walk,"loop")
		else
			set_anim(e,pl_anim_idle)
		end
	end
	
	if not btn(üÖæÔ∏è) then
		e.canjump=true
	end
	
	if e.canjump and btnp(üÖæÔ∏è)
	then
		if e.air_‚ßó<5 then
			jump(e)
			e.air_‚ßó=5
		end
	end
end

function jump(e)
	e.jump_‚ßó=5
	e.dy=-pl_jumpf
	e.in_air=true
	e.canjump=false
	set_anim(e,pl_anim_air,"blend",1)
end

function player_update(e)
	if e.stand_entity then
		e.fdx+=e.stand_entity.mdx+e.stand_entity.physdx
	end


	entity_update(e)
	
	if e.in_air then
		local a,b=-2.5,1
		local t=(e.dy-a)/(b-a)
		e.fblend=t
	end
end

function player_on_air(e)
	set_anim(e,pl_anim_air,"blend",1)
end

function player_on_land(e)
	local a=pl_anim_land
	if (e.ldy>3) a=pl_anim_land_hard
	set_anim(e,a,"play",1)
end
-->8
-- environment

function make_enviro_ent(param)
	local e=make_entity({
		ix=0,iy=0,
		collide=false,
		overlap_‚ßó=0,
		on_update=enviro_update,
		on_trigger=function()end,
	})
	tblcpy(param or {},e)
	return e
end

function enviro_update(e)
	entity_update(e)
	if (e.overlap_‚ßó>0) e.overlap_‚ßó-=1
end

-- spring bud
function make_spring_bud(x,y)
	local e=make_enviro_ent({
		name="bud_"..tostr(x)
			.."_"..tostr(y),
		x=x,y=y,
		w=1,
		grow_‚ßó=0,
		growing=false,
		on_update=bud_update,
		on_trigger=bud_trigger,
	})
	
	set_anim(e,{48})
	add(attack_triggers,e)
	
	return e
end

function bud_update(e)
	enviro_update(e)
	
	if e.growing then
		e.grow_‚ßó+=1
		if e.grow_‚ßó>=10 then
			make_spring(e.x,e.y)
			destroy_entity(e)
		end
	end
end

function bud_trigger(e)
	set_anim(e,{49,33,50})
	e.growing=true
end

-- spring
function make_spring(x,y)
	local e=make_enviro_ent({
		name="spring_"..tostr(x)
			.."_"..tostr(y),
		x=x,y=y,
		w=1,
		on_trigger=spring_trigger,
	})
	
	set_anim(e,{32})
	add(overlap_triggers,e)

	return e
end

function spring_trigger(e,src)
	if src.dy>0 then
		set_anim(e,{33,33,34,32})
		e.fs=2
		src.dy=-4
		e.overlap_‚ßó=5
	end
end

-- platforms
function make_platform(x,y,opt)
	local e=make_entity({
			name="platform",
			x=x,y=y,
			dx=1,dy=0,
			ix=1,iy=1,
			mdx=0,mdy=0,
			g=0,
			collide=true,
			on_update=platform_update,
			on_hit_wall=function(e,side)
				if side>0 then
					e.dx=-abs(e.ldx)
				else
					e.dx=abs(e.ldx)
				end
			end,
		})
	set_anim(e,{20})
	tblcpy(opt or {},e)
	add(solid_entities,e)
	return e
end

function platform_update(e)
	e.mdx=e.dx
	entity_update(e)
end
-->8
-- physics

function map_solid(x,y)
	local wx=x/8
	local wy=y/8
	local lx=wx-flr(wx)
	local ly=wy-flr(wy)
	local m=mget(wx,wy)
	local q=0
	if lx<0.5 then
		q=ly<0.5 and 0 or 2
	else
		q=ly<0.5 and 1 or 3
	end
	return fget(m,q)
end

function entity_solid(x,y,ignore,info)
	for _,e in ipairs(solid_entities)
	do
		if e~=ignore and
			e:contains(x,y)
		then
			if type(info)=="table" then
				info.entity=e
			end
			return true
		end
	end
end

function solid(x,y,ent,ignore,info)
	return map_solid(x,y) or
		(ent and entity_solid(x,y,ignore,info))
end

function should_fall(e)
	if (e.in_air) return true
	
	local air=true
	for i=-e.w,e.w-1 do
		local ty=e.y+e.h+1
		if solid(e.x+i,ty,e.physent) then
			air=false
		end
	end
	
	return air
end

function phys_side(e)
	local top,bot=-e.h,e.h-1
	e.physdx=0
	
	if e.dx>=0 then
		for i=top,bot do
			if solid(e.x+e.w,e.y+i,e.physent,e) then
				e.dx=0
				local lx=e.x
				e.x=(e.x+e.w)\4*4-e.w
				e.physdx=e.x-lx
				return true,1
			end
		end
	end
	
	if e.dx<=0 then
		for i=top,bot do
			if solid(e.x-e.w,e.y+i,e.physent,e) then
				e.dx=0
				local lx=e.x
				e.x=(e.x-e.w)\4*4+4+e.w
				e.physdx=e.x-lx
				return true,-1
			end
		end
	end
	
	return false
end

function phys_floor(e)
	if (e.dy<0) return false
	
	local landed=false
	local info={}
	
	for i=-e.w,e.w-1 do
		local ty=e.y+e.h
		if solid(e.x+i,ty,e.physent,e,info) then
			landed=true
			e.stand_entity=info.entity
		end
	end
	
	if landed then
		e.dy=0
		e.y=(e.y+e.h)\4*4-e.h
	elseif e.stand_entity then
		
	end
	
	return landed
end

function phys_roof(e)
	local collided=false
	for i=-e.w,e.w-1 do
		if solid(e.x+i,e.y-e.h,e.physent,e) then
			e.dy=0
			e.y=(e.y-e.h)\4*4+4+e.h
			collided=true
		end
	end
	return collided
end
__gfx__
0000000088888888000000000000000000000000000000000000000000000000003b3b0000000000003b3b0000000000003b3b00003b3b000d3b3b000ddddd00
000000008ee8eee80000000000000000000000000000000000000000000000000d333300003b3b000d333300003b3b00003b3b000d333300dd3333d0dd3b3bd0
007007008e88e8e8000000000000000000000000000000000000000000000000dd3bbbd00d333300dd3bb3d00d333300003bbb00dd33bbd03d33bbdddd3333dd
000770008ee8ee88000000000000000000000000000000000000000000000000dddbdddddd33bbd0dddbdddddd3bb3d000dbbb00ddddddddddddddd33d33b3dd
000770008e88e8e80000000000000000000000000000000000000000000000003dddddd3ddddbddd3dddddd3ddddbddd00dbbd003ddbdddd0ddddddd0dddddd3
007007008ee8e8e80000000000000000000000000000000000000000000000000dddddd03dddddd30dddddd03dddddd300ddbd000dddbbd3033dd330033dd330
0000000088888888000000000000000000000000000000000000000000000000033dd330033ddd3333dddd3333ddd33000dbbd00033bd3300330033003300330
000000008888888800000000000000000000000000000000000000000000000003300330033ddd333300003333ddd3300033330003300b300000000000000000
00000000000000000000000000000000999999990000000000000000000000000088780000000000000000000000000000888e00008878000088780007887880
0040404000000000000000000000000099999999000000000000000000000000087888700088780000000000000000000088870008788870087888708fffff87
404004400000000000000000000000009999999900000000000000000000000078ffff880878887000000000000000000e88888008ffff8078ffff88fffddfff
04040400000000000000000000000000999999990000000000000000000000008fddddf878ffff880000000000000000078888e00fdcdcf08fddddf80dddddd0
0244004000000000000330000000000099999999000000000000000000000000fddcdcdf8fddddf8008878000000000000de8d7000dddd000ddcdcd00dddddd0
0424244400000000003bb30000000000999999990000000000000000000000000dddddd0fddcdcdf887888780888787000d7dd0000dddd000dddddd00ddcdcd0
242242200000000003bbbb3000000000999999990000000000000000000000000dddddd00dddddd07ddcdcd87878888800dddd0000dddd0000dddd000dddddd0
22442242000000000003300000000000999999990000000000000000000000000dddddd0dddddddddddddddd8ddcdcd800dddd0000dddd000000000000dddd00
000000000000000000bbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000bbb000000000000bbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00bbbbb0000000000bbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbbbbb0000bb000bbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0bbbb33b00bbbbb00bbb23b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbb33330bbb33bbb0b32233000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b332000b332233b0032230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00022000002222000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000bb00000000000000000000000000003bbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000bbb0000000000000000000000000003bbbbbb300000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000bbbb0000bbbb000000000000000000bbbbbbbb00333300000000000000000000000000000000000000000000000000000000000000000000000000
0000000000bbbbb00bbbbbb000000000000000000003300003bbbb30000000000000000000000000000000000000000000000000000000000000000000000000
000000000bb23bb00bbbbbbb0000000000000000000330000bbbbbb0000330000000000000000000000000000000000000000000000000000000000000000000
000000000b3223b0bbbb23bb00000000000000000003300000033000003bb3000000000000000000000000000000000000000000000000000000000000000000
0003300000322300bb3223300000000000000000000330000003300003bbbb300000000000000000000000000000000000000000000000000000000000000000
00322300000220000002200000000000000000000003300000033000000330000000000000000000000000000000000000000000000000000000000000000000
aaaaaaaaaaaa00000000aaaa0000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000
aaaaaaaaaaaa00000000aaaa0000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000
aaaaaaaaaaaa00000000aaaa000000000000000000000000000000000000000000000000000000aa000000000000000000000000000000000000000000000000
aaaaaaaaaaaa00000000aaaa000000000000000000000000000000000000000000000000000000aa000000000000000000000000000000000000000000000000
aaaaaaaa0000000000000000aaaa00000000aaaa0000000000000000000000000000000000000aaa000000000000000000000000000000000000000000000000
aaaaaaaa0000000000000000aaaa00000000aaaa000000000000000000000000000000000000aaaa000000000000000000000000000000000000000000000000
aaaaaaaa0000000000000000aaaa00000000aaaa0000000000000000000000000000000000aaaaaa000000000000000000000000000000000000000000000000
aaaaaaaa0000000000000000aaaa00000000aaaa00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaa00000000aaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaa00000000aaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaa00000000aaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaa00000000aaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa000000000000aaaaaaaaaaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa000000000000aaaaaaaaaaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa000000000000aaaaaaaaaaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa000000000000aaaaaaaaaaaa00000000aaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa00000000aaaaaaaa0000aaaaaaaaaaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa00000000aaaaaaaa0000aaaaaaaaaaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa00000000aaaaaaaa0000aaaaaaaaaaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaa00000000aaaaaaaa0000aaaaaaaaaaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaaaaaaaaaa0000aaaaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaaaaaaaaaa0000aaaaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaaaaaaaaaa0000aaaaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000aaaaaaaaaaaaaaaaaaaa0000aaaaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000001020408000000000000000000030005001300000000000000000000000000000e0d0b07000000000000000000000000000000000000000000000f000f01020408000000000000000000000006030c050a0000000000000000000000090e0d0b07000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000000000000040000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000001800000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4014000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000000000000054000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000003030303061303000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4010104040404040404000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404000000000000000000051544000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000000000005330303030003000544000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000000000004040404040004040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000000014000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000001400000000000000300000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4000140000000000000061620000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4014303030303030306140406230304000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
