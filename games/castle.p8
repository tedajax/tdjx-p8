pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
function _init()
	debug={
		view_log="watch"
	}
	
	-- uncomment to disable debug
 --	debug=nil
	
	-- 64x64 mode
--	poke(0x5f2c,3)
	
	if debug then
		-- kb/mouse for debug
		poke(0x5f2d,1)
	end
	
	entities={}
	
	for mx=0,127 do
		for my=0,63 do
			local m=mget(mx,my)
			parse_tile(m,mx,my)
		end
	end
	
	set_anim(pl,{8})
	
	add(entities,del(entities,pl))
	
	_update=play_update
	_draw=play_draw
end

function keypress(key)
	if key=="1" then
		debug.view_log="watch"
	elseif key=="2" then
		debug.view_log="log"
	end
end

function parse_tile(░,x,y)
	if ░==8 then
		pl=make_player(x*8+4,y*8+5)
		mset(x,y,0)
	end
end

function check_keys()
	while stat(30) do
		keypress(stat(31))
	end
end

function play_update()
	check_keys()

	proc_input(pl)
	foreach(entities,
		function(e) e:on_update() end)
	
	watch("pos:"..pl.x..","..pl.y)
	watch("vel:"..pl.dx..","..pl.dy)
end

function play_draw()
	cls()
	
	map(0,0,0,0,16,16)
	
	foreach(entities,
		function(e) e:on_draw() end)

	draw_log(debug.view_log)
	clear_watch()
end
-->8
function make_entity(params)
	local e={
		⧗=0,						-- frames active
		x=0,y=0,			-- position
		dx=0,dy=0,	-- velocity
		ix=1,iy=1, -- inv friction
		w=4,h=4,			-- half extents
		g=0,							-- gravity
		hp=1,   			-- health
		air_⧗=0,

		-- flags
		visible=true,
		collide=true,
		in_air=false,
		
		-- sprite
		facing=1,
		sw=8,sh=8,	 -- screen dim
		tw=1,th=1,	 -- tile dim
		
		-- animation
		frame=1,
		frames={1},
		fs=4,
		fc=0,
		fblend=0,
		-- valid modes
		--		pause, stay on current frame
		--		play, play anim normally
		--  loop, play normally and loop
		--		blend, set frame based on fblend (0-1)
		anim_mode="pause",
		
		on_draw=entity_draw,
		on_update=entity_update,
		on_air=function()end,
		on_land=function()end,
		on_hit_ceiling=function()end,
		on_hit_wall=function()end,
		on_fall=function()end,
	}
	tblcpy(params,e)
	return add(entities,e)
end

function set_anim(e,frames,mode)
	if (e.frames==frames) return
	e.frames=frames
	e.frame=1
	e.fc=0
	e.fs=4
	e.anim_mode=mode or "play"
end

function entity_draw(e)
	if (not e.visible) return
	
	spr(e.frames[e.frame],
		e.x-e.sw/2,
		e.y-e.sh/2,
		e.tw,e.th,
		e.facing==-1)
end

function entity_move_x(e)
	e.x+=e.dx
	e.dx*=e.ix
end

function entity_move_y(e)
	if e.in_air or not e.collide
	then
		e.y+=e.dy
		e.dy=min(8,e.dy+e.g)
		e.dy*=e.iy
	end
end

function entity_update(e)
	e.⧗+=1
	
	-- last values
	e.ldx=e.dx
	e.ldy=e.dy
	e.lx2=e.lx
	e.ly2=e.ly
	e.lx=e.x
	e.ly=e.y
		
	entity_move_x(e)
	
	-- horizontal collision
	if e.collide then
		if phys_side(e) then
			e:on_hit_wall()
		end
	end

	entity_move_y(e)
	
	if e.collide then
		if phys_floor(e) then
			if (do_it)log(e.y)
			if e.in_air then
				e:on_land()
			end
			e.in_air=false
		else
			if not e.in_air and e.dy==0
			then
				if should_fall(e) then

					if not e.in_air then
						e:on_fall()
						e:on_air()
					end
					e.in_air=true
				end
			else
		
				if not e.in_air then
					e:on_air()
				end
				e.in_air=true
			end
		end
		if phys_roof(e) then
			e:on_hit_ceiling()
		end
	end
	
	if e.in_air then
		e.air_⧗+=1
	else
		e.air_⧗=0
	end
	
	-- update animation
	if e.anim_mode=="play"
		or e.anim_mode=="loop"
	then
  e.fc+=1
  
  if e.fc==e.fs then
	  e.fc=0
	  e.frame+=1
	  if e.frame>#e.frames then
	   if e.anim_mode=="loop" then
	    e.frame=1
	   else
	    e.frame=#e.frames
	   end
	  end
	 end
 elseif e.anim_mode=="blend" then
 	local nf=#e.frames
 	local b=mid(e.fblend,0,1-0x0000.0001)
 	e.frame=flr(nf*b)+1
 	watch(e.frame)
 end
end

-->8
pl_anim_idle={8}
pl_anim_walk={8,9,10,11}
pl_anim_air={24,25,26,27}

function make_player(px,py)
	pl_g=0.35
	pl_jumpf=4

	return make_entity({
		name="player",
		x=px,y=py,
		g=pl_g,
		ix=0,
		jump_⧗=0,
		canjump=false,
		on_update=player_update,
		on_air=player_on_air,
		on_land=player_on_land,
	})
end

function proc_input(e)
	local inx,iny=0,0
	if (btn(⬅️)) inx-=1
	if (btn(➡️)) inx+=1
	if (btn(⬆️)) iny-=1
	if (btn(⬇️)) iny+=1
	
	if inx~=0 then
		e.dx+=inx
		e.facing=sgn(inx)
	end
	
	if not e.in_air then
		if inx~=0 then
			set_anim(e,pl_anim_walk,"loop")
		else
			set_anim(e,pl_anim_idle)
		end
	end
	
	if not btn(🅾️) then
		e.canjump=true
	end
	
	if e.canjump and btnp(🅾️)
	then
		if e.air_⧗<5 then
			jump(e)
			e.air_⧗=5
		end
	end
end

function jump(e)
	e.jump_⧗=5
	e.dy=-pl_jumpf
	e.in_air=true
	e.canjump=false
	set_anim(e,pl_anim_air,"blend")
end

function player_update(e)
	entity_update(e)
	
	if e.in_air then
		local a,b=-2,0.5
		local t=(e.dy-a)/(b-a)
		e.fblend=t
	end
end

function player_on_air(e)
	log("on_air")
	set_anim(e,pl_anim_air,"blend")
end

function player_on_land(e)
	set_anim(e,pl_anim_walk)
end
-->8
-- physics

function solid(x,y)
	local m=mget(x/8,y/8)
	return fget(m,0)
end

function should_fall(e)
	if (e.in_air) return true
	
	local air=true
	for i=-e.w,e.w-1 do
		local ty=e.y+e.h+1
		if solid(e.x+i,ty) then
			air=false
		end
	end
	
	return air
end

function phys_side(e)
	local top,bot=-e.h,e.h-1
	
	if e.dx>=0 then
		for i=top,bot do
			if solid(e.x+e.w,e.y+i) then
				e.dx=0
				e.x=(e.x+e.w)\8*8-e.w
				return true
			end
		end
	end
	
	if e.dx<=0 then
		for i=top,bot do
			if solid(e.x-e.w,e.y+i) then
				e.dx=0
				e.x=(e.x-e.w)\8*8+8+e.w
				return true
			end
		end
	end
	
	return false
end

function phys_floor(e)
	if (e.dy<0) return false
	
	local landed=false
	
	for i=-e.w,e.w-1 do
		local ty=e.y+e.h
		if solid(e.x+i,ty) then
			landed=true
		end
	end
	
	if landed then
		e.dy=0
		e.y=(e.y+e.h)\8*8-e.h
	end
	
	return landed
end

function phys_roof(e)
	local collided=false
	for i=-e.w,e.w-1 do
		if solid(e.x+i,e.y-e.h) then
			e.dy=0
			e.y=(e.y-e.h)\8*8+8+e.h
			collided=true
		end
	end
	return collided
end
-->8
-- utilities

function tblcpy(src,dst)
	dst=dst or {}
	for k,v in pairs(src) do
		dst[k]=v
	end
	return dst
end

function aabb(t1,t2)
	return t1.x+t1.w>=t2.x-t2.w
		and t1.x-t1.w<=t2.x+t2.w
		and t1.y+t1.w>=t2.y-t2.w
		and t1.y-t1.w<=t2.y+t2.w
end

function sgn3(v)
	if (v==0) return 0
	return sgn(v)
end

-- width of string
function strw(s)
	-- todo handle special chars
	return #s*4
end

_logs={
	watch={
		log={},
		col=11
	},
	log={
		log={},
		col=6
	}
}

function add_log(log,msg,col)
	add(log.log,{
		msg=msg or "",
		col=col or log.col
	})
end

function log(msg,col)
	add_log(_logs.log,msg,col)
end

function watch(msg,col)
	add_log(_logs.watch,msg,col)
end

function clear_watch()
	_logs.watch.log={}
end

function draw_log(name)
	for i,l in ipairs(_logs[name].log) do
		local y=(i-1)*6
		print(l.msg,0,y,l.col)
	end
end

__gfx__
00000000000aaa00000000000000000000000000000000000000000000000000003b3b0000000000003b3b000000000000000000000000000000000000000000
000000000aaaff000000000000000000000000000000000000000000000000000d333300003b3b000d333300003b3b0000000000000000000000000000000000
0070070000aaff00000000000000000000000000000000000000000000000000dd3bbbd00d333300dd3bb3d00d33330000000000000000000000000000000000
0007700001154400000000000000000000000000000000000000000000000000dddbdddddd33bbd0dddbdddddd3bb3d000000000000000000000000000000000
00077000011554000000000000000000000000000000000000000000000000003dddddd3ddddbddd3dddddd3ddddbddd00000000000000000000000000000000
00700700001444000000000000000000000000000000000000000000000000000dddddd03dddddd30dddddd03dddddd300000000000000000000000000000000
0000000000050500000000000000000000000000000000000000000000000000033dd330033ddd3333dddd3333ddd33000000000000000000000000000000000
000000000004040000000000000000000000000000000000000000000000000003300330033ddd333300003333ddd33000000000000000000000000000000000
9999999900000000000000000000000000000000000000000000000000000000003b3b00003b3b000d3b3b000ddddd0000000000000000000000000000000000
9999999900000000000000000000000000000000000000000000000000000000003b3b000d333300dd3333d0dd3b3bd000000000000000000000000000000000
9999999900000000000000000000000000000000000000000000000000000000003bbb00dd33bbd03d33bbdddd3333dd00000000000000000000000000000000
999999990000000000000000000000000000000000000000000000000000000000dbbb00ddddddddddddddd33d33b3dd00000000000000000000000000000000
999999990000000000000000000000000000000000000000000000000000000000dbbd003ddbdddd0ddddddd0dddddd300000000000000000000000000000000
999999990000000000000000000000000000000000000000000000000000000000ddbd000dddbbd3033dd330033dd33000000000000000000000000000000000
999999990000000000000000000000000000000000000000000000000000000000dbbd00033bd330033003300330033000000000000000000000000000000000
99999999000000000000000000000000000000000000000000000000000000000033330003300b30000b0b000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000008000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010000000001010101000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010100000101010101010000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
